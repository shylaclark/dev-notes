{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dev Notes GitHub Source Observations: Handwritten notes are good for jotting down ideas and reminders. My tech notes need to be searchable. In meetings, typing is much faster. About This repository contains all of my notes related to software development. Notes Atom CS Basics Scrum LaTeX Time Management Virtual Environment Django Languages Java JavaScript Python Data DevOps Tools Notes formatted with MkDocs .","title":"Dev Notes"},{"location":"#dev-notes","text":"GitHub Source Observations: Handwritten notes are good for jotting down ideas and reminders. My tech notes need to be searchable. In meetings, typing is much faster.","title":"Dev Notes"},{"location":"#about","text":"This repository contains all of my notes related to software development.","title":"About"},{"location":"#notes","text":"Atom CS Basics Scrum LaTeX Time Management Virtual Environment Django Languages Java JavaScript Python Data DevOps Tools Notes formatted with MkDocs .","title":"Notes"},{"location":"ant/","text":"Ant Ivy Ivy is a transitive package (dependency) manager. It is a sub-project of Apache Ant. Setup Ivy Add ivy.xml file declaring dependencies to project. Add ivy-related settings to build.xml file. Terms subant: used to execute a build in a different directory Resources Download dependencies with Ant and Ivy","title":"Ant"},{"location":"ant/#ant","text":"","title":"Ant"},{"location":"ant/#ivy","text":"Ivy is a transitive package (dependency) manager. It is a sub-project of Apache Ant.","title":"Ivy"},{"location":"ant/#setup-ivy","text":"Add ivy.xml file declaring dependencies to project. Add ivy-related settings to build.xml file.","title":"Setup Ivy"},{"location":"ant/#terms","text":"subant: used to execute a build in a different directory","title":"Terms"},{"location":"ant/#resources","text":"Download dependencies with Ant and Ivy","title":"Resources"},{"location":"atom/","text":"Atom Best Practices Favorite packages latex // Compile LaTeX documents from within Atom language-latex // Syntax highlighting for LaTeX for Atom less-than-slash // Adds automatic closing of HTML tags pigments // A package to display colors in project and files color-picker // Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it linter-chktex // Linter plugin for LaTeX, using chktex minimap // A preview of the full source code atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme Install script Just install from the command line... apm install latex language-latex less-than-slash pigments color-picker linter-chktex minimap atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme","title":"Atom Best Practices"},{"location":"atom/#atom-best-practices","text":"","title":"Atom Best Practices"},{"location":"atom/#favorite-packages","text":"latex // Compile LaTeX documents from within Atom language-latex // Syntax highlighting for LaTeX for Atom less-than-slash // Adds automatic closing of HTML tags pigments // A package to display colors in project and files color-picker // Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it linter-chktex // Linter plugin for LaTeX, using chktex minimap // A preview of the full source code atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme","title":"Favorite packages"},{"location":"atom/#install-script","text":"Just install from the command line... apm install latex language-latex less-than-slash pigments color-picker linter-chktex minimap atom-beautify prettier-atom atom-spotify2 atom-transpose case-keep-replace change-case copy-path duplicate-line-or-selection editorconfig file-icons git-plus highlight-selected local-history project-manager related set-syntax sort-lines sublime-style-column-selection tab-foldername-index sync-settings toggle-quotes atom-wrap-in-tag atom-ternjs autoclose-html autocomplete-modules docblockr emmet emmet-jsx-css-modules es6-javascript js-hyperclick hyperclick linter-eslint tree-view-copy-relative-path lodash-snippets language-babel react-es7-snippets atom-jest-snippets one-dark-ui dracula-theme","title":"Install script"},{"location":"bitbucket-sop/","text":"7441 Bitbucket SOP Steps New branch on BitBucket. Branch off integration Feature branch Name needs my name and feature Clone project into local Checkout my branch Build project $ git branch -a $ git checkout","title":"Bitbucket sop"},{"location":"build.xml/","text":"<!-- Include all JAR files that will be included in /WEB-INF/lib --> <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** --> <!-- Include all elements that Tomcat exposes to applications --> <fileset dir=\"${catalina.home}/bin\"> <include name=\"*.jar\"/> </fileset> <pathelement location=\"${catalina.home}/lib\"/> <fileset dir=\"${catalina.home}/lib\"> <include name=\"*.jar\"/> </fileset> <!-- Compile Java classes as necessary --> <mkdir dir=\"${build.home}/WEB-INF/classes\"/> <javac srcdir=\"${src.home}\" destdir=\"${build.home}/WEB-INF/classes\" debug=\"${compile.debug}\" deprecation=\"${compile.deprecation}\" optimize=\"${compile.optimize}\"> <classpath refid=\"compile.classpath\"/> </javac> <!-- Copy application resources --> <copy todir=\"${build.home}/WEB-INF/classes\"> <fileset dir=\"${src.home}\" excludes=\"**/*.java\"/> </copy> <!-- Copy documentation subdirectories --> <mkdir dir=\"${dist.home}/docs\"/> <copy todir=\"${dist.home}/docs\"> <fileset dir=\"${docs.home}\"/> </copy> <!-- Create application JAR file --> <jar jarfile=\"${dist.home}/${app.name}-${app.version}.war\" basedir=\"${build.home}\"/> <!-- Copy additional files to ${dist.home} as necessary --> <deploy url=\"${manager.url}\" username=\"${manager.username}\" password=\"${manager.password}\" path=\"${app.path}\" localWar=\"file://${build.home}\"/> <mkdir dir=\"${dist.home}/docs/api\"/> <javadoc sourcepath=\"${src.home}\" destdir=\"${dist.home}/docs/api\" packagenames=\"*\"> <classpath refid=\"compile.classpath\"/> </javadoc> <list url=\"${manager.url}\" username=\"${manager.username}\" password=\"${manager.password}\"/> <!-- Create build directories as needed --> <mkdir dir=\"${build.home}\"/> <mkdir dir=\"${build.home}/WEB-INF\"/> <mkdir dir=\"${build.home}/WEB-INF/classes\"/> <!-- Copy static content of this web application --> <copy todir=\"${build.home}\"> <fileset dir=\"${web.home}\"/> </copy> <!-- Copy external dependencies as required --> <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** --> <mkdir dir=\"${build.home}/WEB-INF/lib\"/> <!-- Copy static files from external dependencies as needed --> <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** --> <reload url=\"${manager.url}\" username=\"${manager.username}\" password=\"${manager.password}\" path=\"${app.path}\"/> <undeploy url=\"${manager.url}\" username=\"${manager.username}\" password=\"${manager.password}\" path=\"${app.path}\"/>","title":"Build.xml"},{"location":"cs-basics/","text":"CS Basics Data Hierarchy Bit Character Field Record File Bits Smallest data item. Value is 0 or 1. Short for \"binary\" digit. Ways you can manipulate a bit's value: examining, setting, reversing Record Group of related fields implemented as a class in Java. Example record: name | pay rate | job title Anne | 25.00 | supervisor File A group of related records. (More generally, arbitrary data in arbitrary formats.) Sometimes... simply a sequence of bytes. Field Group of chars or bytes. Name field, age field. ASCII 128 chars encoded into 7-bit binary integers. Hardware Memory Unit Fast, low-capacity. Volatile (aka lost at shutdown). Main memory RAM Typically 8 GB on desktop computer Stores data for quick access by the processor. aka = RAM, memory, main memory, primary storage, main storage Arithmetic and Logic Unit ALU Performs calculations. Compares two values (decision). ALU usually implemented in the CPU. Central Processing Unit CPU Coordinates logical unit operations aka \"processor\" E.g. dual core processor = 2 CPUs Software method: houses the program statements that actually perform its tasks class: houses the set of methods that perform the class's tasks instantiation: the process of building an object of a class object: instance of a class; class methods can only be called on objects of that class method call: tells a method of the object to run (perform tasks defined in method) encapsulation: implementation details hidden within the object attributes: object's defining characteristics; specified by instance variables of a class inheritance: new class absorbs characteristics of pre-existing class; can customize; can add kernel: software containing core components of the OS Java class libraries aka Java APIs Collection of existing classes and methods. JVM Java Virtual Machine App that simulates a computer. Hides the underlying operating system and hardware from the programs that interact with it. JVM's class loader takes .class files of program's byte codes and transfers them to main memory. Theorems \"Structured Programming Theorem\" aka Bohm-Jacopini Theorem Combine subprograms in only 3 specific ways -- control structures. Control structures: 1. sequence 2. selection 3. iteration","title":"CS Basics"},{"location":"cs-basics/#cs-basics","text":"","title":"CS Basics"},{"location":"cs-basics/#data","text":"Hierarchy Bit Character Field Record File","title":"Data"},{"location":"cs-basics/#bits","text":"Smallest data item. Value is 0 or 1. Short for \"binary\" digit. Ways you can manipulate a bit's value: examining, setting, reversing","title":"Bits"},{"location":"cs-basics/#record","text":"Group of related fields implemented as a class in Java. Example record: name | pay rate | job title Anne | 25.00 | supervisor","title":"Record"},{"location":"cs-basics/#file","text":"A group of related records. (More generally, arbitrary data in arbitrary formats.) Sometimes... simply a sequence of bytes.","title":"File"},{"location":"cs-basics/#field","text":"Group of chars or bytes. Name field, age field.","title":"Field"},{"location":"cs-basics/#ascii","text":"128 chars encoded into 7-bit binary integers.","title":"ASCII"},{"location":"cs-basics/#hardware","text":"","title":"Hardware"},{"location":"cs-basics/#memory-unit","text":"Fast, low-capacity. Volatile (aka lost at shutdown). Main memory RAM Typically 8 GB on desktop computer Stores data for quick access by the processor. aka = RAM, memory, main memory, primary storage, main storage","title":"Memory Unit"},{"location":"cs-basics/#arithmetic-and-logic-unit","text":"ALU Performs calculations. Compares two values (decision). ALU usually implemented in the CPU.","title":"Arithmetic and Logic Unit"},{"location":"cs-basics/#central-processing-unit","text":"CPU Coordinates logical unit operations aka \"processor\" E.g. dual core processor = 2 CPUs","title":"Central Processing Unit"},{"location":"cs-basics/#software","text":"method: houses the program statements that actually perform its tasks class: houses the set of methods that perform the class's tasks instantiation: the process of building an object of a class object: instance of a class; class methods can only be called on objects of that class method call: tells a method of the object to run (perform tasks defined in method) encapsulation: implementation details hidden within the object attributes: object's defining characteristics; specified by instance variables of a class inheritance: new class absorbs characteristics of pre-existing class; can customize; can add kernel: software containing core components of the OS","title":"Software"},{"location":"cs-basics/#java-class-libraries","text":"aka Java APIs Collection of existing classes and methods.","title":"Java class libraries"},{"location":"cs-basics/#jvm","text":"Java Virtual Machine App that simulates a computer. Hides the underlying operating system and hardware from the programs that interact with it. JVM's class loader takes .class files of program's byte codes and transfers them to main memory.","title":"JVM"},{"location":"cs-basics/#theorems","text":"\"Structured Programming Theorem\" aka Bohm-Jacopini Theorem Combine subprograms in only 3 specific ways -- control structures. Control structures: 1. sequence 2. selection 3. iteration","title":"Theorems"},{"location":"curl/","text":"cURL \"Client URL\" How to use CURL on Windows | How to test API with CURL | CURL Basics Step by Step https:/cURL \"Client URL\" How to use CURL on Windows | How to test API with CURL | CURL Basics Step by Step https://www.youtube.com/watch?v=8f9DfgRGOBo A library and command-line tool for transferring data using various protocols. A tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP). The command is designed to work without user interaction. The cURL project produces two products, libcurl and cURL./www.youtube.com/watch?v=8f9DfgRGOBo A library and command-line tool for transferring data using various protocols. A tool to transfer data from or to a server, using one of the supported protocols (DICT, FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP). The command is designed to work without user interaction. The cURL project produces two products, libcurl and cURL.","title":"Curl"},{"location":"design-patterns/","text":"Web Design Patterns Events Functions can start at page load. Events are functions that start when user clicks a link, enters a form, scrolls, moves mouse, etc. These functions \"listen\" for an event and then initiate the function. Common Event Listeners onload //when the page loads onclick //when a user clicks something onmouseover //when a user mouses over something onfocus //when a user puts the cursor in a form field onblur //When a user leaves a form field Example event listener in HTML <button onclick=\"alert('Hello, world');\"></button> Resources http://idratherbewriting.com/events-and-listeners-javascript/","title":"Web Design Patterns"},{"location":"design-patterns/#web-design-patterns","text":"","title":"Web Design Patterns"},{"location":"design-patterns/#events","text":"Functions can start at page load. Events are functions that start when user clicks a link, enters a form, scrolls, moves mouse, etc. These functions \"listen\" for an event and then initiate the function.","title":"Events"},{"location":"design-patterns/#common-event-listeners","text":"onload //when the page loads onclick //when a user clicks something onmouseover //when a user mouses over something onfocus //when a user puts the cursor in a form field onblur //When a user leaves a form field","title":"Common Event Listeners"},{"location":"design-patterns/#example-event-listener-in-html","text":"<button onclick=\"alert('Hello, world');\"></button>","title":"Example event listener in HTML"},{"location":"design-patterns/#resources","text":"http://idratherbewriting.com/events-and-listeners-javascript/","title":"Resources"},{"location":"docker/","text":"","title":"Docker"},{"location":"git-crib-sheet/","text":"Git Create new branch and push to remote git checkout -b <new-branch> git push -u origin <new-branch> Check out a remote branch git checkout <branch-name> Delete a local branch git branch -d <local-branch> Stash git stash Recover stashed changes git stash pop See remote branches git branch -r Pull changes from all remote branches and merge remote with the checked-out branch git pull Pull changes from the remote origin master branch and merge them with the local checked-out branch git pull origin master Bring in changes from all branches (no merge) git fetch Blow away local changes git reset \u2014 hard origin/master Look at commits (q to exit) git log Refer to most recent commit git show HEAD Sync a fork [ source ] git fetch upstream git checkout master git merge upstream/master git pull git push origin master git checkout file-browser-spinner git merge master pip install -e . To undo git add before a commit git reset <file> To undo git commit: git reset --hard origin/master Commits See your commits git log --oneline Note: \"Snapshot\" is another name for commit. Write long commit message [ source ] git commit -a This should open vim editor, and now you can create a two-part commit message. 1. Subject line (50 chars max) 1. Body - Use the body to explain what and why vs. how - Wrap each line of the body at 72 chars Tip: It\u2019s easy to configure Vim to wrap text at 72 characters when you\u2019re writing a Git commit. Example long commit commit eb0b56b19017ab5c16c745e6da39c53126924ed6 Author: Pieter Wuille <pieter.wuille@gmail.com> Date: Fri Aug 1 22:57:55 2014 +0200 Simplify serialize.h's exception handling Remove the 'state' and 'exceptmask' from serialize.h's stream implementations, as well as related methods. As exceptmask always included 'failbit', and setstate was always called with bits = failbit, all it did was immediately raise an exception. Get rid of those variables, and replace the setstate with direct exception throwing (which also removes some dead code). As a result, good() is never reached after a failure (there are only 2 calls, one of which is in tests), and can just be replaced by !eof(). fail(), clear(n) and exceptions() are just never called. Delete them. ``` Change a commit message [[source](https://docs.github.com/en/github/committing-changes-to-your-project/changing-a-commit-message)] Undo last commit (but preserve changes) git reset --soft HEAD~1 Add a git merge tool git config --global merge.tool vscode Merge Requests The MR title should describe the change you want to make. The MR description should give a reason for your change. If you are contributing code, fill in the description according to the default template already provided in the \u201cDescription\u201d field. If you are contributing documentation, choose Documentation from the \u201cChoose a template\u201d menu and fill in the description according to the template. Mention the issue(s) your merge request solves, using the Solves #XXX or Closes #XXX syntax to auto-close the issue(s) once the merge request is merged. If you\u2019re allowed to, set a relevant milestone and labels.","title":"Git"},{"location":"git-crib-sheet/#git","text":"Create new branch and push to remote git checkout -b <new-branch> git push -u origin <new-branch> Check out a remote branch git checkout <branch-name> Delete a local branch git branch -d <local-branch> Stash git stash Recover stashed changes git stash pop See remote branches git branch -r Pull changes from all remote branches and merge remote with the checked-out branch git pull Pull changes from the remote origin master branch and merge them with the local checked-out branch git pull origin master Bring in changes from all branches (no merge) git fetch Blow away local changes git reset \u2014 hard origin/master Look at commits (q to exit) git log Refer to most recent commit git show HEAD Sync a fork [ source ] git fetch upstream git checkout master git merge upstream/master git pull git push origin master git checkout file-browser-spinner git merge master pip install -e . To undo git add before a commit git reset <file> To undo git commit: git reset --hard origin/master","title":"Git"},{"location":"git-crib-sheet/#commits","text":"See your commits git log --oneline Note: \"Snapshot\" is another name for commit.","title":"Commits"},{"location":"git-crib-sheet/#write-long-commit-message-source","text":"git commit -a This should open vim editor, and now you can create a two-part commit message. 1. Subject line (50 chars max) 1. Body - Use the body to explain what and why vs. how - Wrap each line of the body at 72 chars Tip: It\u2019s easy to configure Vim to wrap text at 72 characters when you\u2019re writing a Git commit. Example long commit commit eb0b56b19017ab5c16c745e6da39c53126924ed6 Author: Pieter Wuille <pieter.wuille@gmail.com> Date: Fri Aug 1 22:57:55 2014 +0200 Simplify serialize.h's exception handling Remove the 'state' and 'exceptmask' from serialize.h's stream implementations, as well as related methods. As exceptmask always included 'failbit', and setstate was always called with bits = failbit, all it did was immediately raise an exception. Get rid of those variables, and replace the setstate with direct exception throwing (which also removes some dead code). As a result, good() is never reached after a failure (there are only 2 calls, one of which is in tests), and can just be replaced by !eof(). fail(), clear(n) and exceptions() are just never called. Delete them. ``` Change a commit message [[source](https://docs.github.com/en/github/committing-changes-to-your-project/changing-a-commit-message)] Undo last commit (but preserve changes) git reset --soft HEAD~1 Add a git merge tool git config --global merge.tool vscode","title":"Write long commit message [source]"},{"location":"git-crib-sheet/#merge-requests","text":"The MR title should describe the change you want to make. The MR description should give a reason for your change. If you are contributing code, fill in the description according to the default template already provided in the \u201cDescription\u201d field. If you are contributing documentation, choose Documentation from the \u201cChoose a template\u201d menu and fill in the description according to the template. Mention the issue(s) your merge request solves, using the Solves #XXX or Closes #XXX syntax to auto-close the issue(s) once the merge request is merged. If you\u2019re allowed to, set a relevant milestone and labels.","title":"Merge Requests"},{"location":"gitlab-sop/","text":"GitLab Standard Operating Procedures Code Review GitLab Code Review Guidelines Commenting GitLab Discussions Conventional Comments","title":"GitLab Standard Operating Procedures"},{"location":"gitlab-sop/#gitlab-standard-operating-procedures","text":"","title":"GitLab Standard Operating Procedures"},{"location":"gitlab-sop/#code-review","text":"GitLab Code Review Guidelines","title":"Code Review"},{"location":"gitlab-sop/#commenting","text":"GitLab Discussions Conventional Comments","title":"Commenting"},{"location":"gradle/","text":"Gradle Initial Setup Download NRL's latest custom distribution of Gradle (e.g. gradle-4.7 ) from the NRLWIKI. Save it in your user directory (e.g. C:\\Users\\sclark ). Open the newly-created global .gradle folder. Locate gradle.properties and add: hgCommandPath = C:\\\\Program Files\\\\TortoiseHg\\\\hg.exe Adding to Project On the command line, cd to project root and run: C:\\Users\\sclark\\gradle-4.7\\bin\\gradle wrapper You should have the following new files: .gradle gradle gradlew gradlew.bat Add a settings.gradle file containing: rootProject.name = '<NameOfProject>' Add a build.gradle file containing: plugins { id 'java' id 'eclipse' id 'idea' } apply plugin: 'nrl.gradle.plugin' MAJOR_VERSION = '1' MINOR_VERSION = '0' sourceCompatibility = 1.8 compileJava.options.encoding = 'UTF-8' sourceSets { main { java { srcDir 'src' } } } dependencies { compile 'org.apache.commons:commons-lang3:3.4', // Apache commons 'com.google.guava:guava:13.0.1', // Google guava 'org.slf4j:slf4j-api:1.7.6' // Logging via SLF4J } artifacts{ archives jar } After that, the plugin is active and your project will automatically be configured to resolve dependencies from Artifactory. Using Command Line Tools Run ./gradlew <command> to execute a Gradle command. War ./gradlew gradle war Or use the Gradle toolbar in IntelliJ. War file is located in build/libs/ Notes Do not confuse the global .gradle directory, which resides in the same directory as Gradle (e.g. gradle-4.7), with your project's .gradle directory, located in your project root. Resources (Spring Gradle)[https://www.jetbrains.com/help/idea/creating-and-managing-modules.html] Gradle When change gradle build: Right click Project > Gradle > Refresh File > Import > Gradle > Existing Gradle Project - Override workspace settings - Local installation directory = .../tools/gradle-4.7 Or Configure Workspace Settings Remove: - settings/ - project - classpath Because Gradle creates these fresh.","title":"Gradle"},{"location":"gradle/#gradle","text":"","title":"Gradle"},{"location":"gradle/#initial-setup","text":"Download NRL's latest custom distribution of Gradle (e.g. gradle-4.7 ) from the NRLWIKI. Save it in your user directory (e.g. C:\\Users\\sclark ). Open the newly-created global .gradle folder. Locate gradle.properties and add: hgCommandPath = C:\\\\Program Files\\\\TortoiseHg\\\\hg.exe","title":"Initial Setup"},{"location":"gradle/#adding-to-project","text":"On the command line, cd to project root and run: C:\\Users\\sclark\\gradle-4.7\\bin\\gradle wrapper You should have the following new files: .gradle gradle gradlew gradlew.bat Add a settings.gradle file containing: rootProject.name = '<NameOfProject>' Add a build.gradle file containing: plugins { id 'java' id 'eclipse' id 'idea' } apply plugin: 'nrl.gradle.plugin' MAJOR_VERSION = '1' MINOR_VERSION = '0' sourceCompatibility = 1.8 compileJava.options.encoding = 'UTF-8' sourceSets { main { java { srcDir 'src' } } } dependencies { compile 'org.apache.commons:commons-lang3:3.4', // Apache commons 'com.google.guava:guava:13.0.1', // Google guava 'org.slf4j:slf4j-api:1.7.6' // Logging via SLF4J } artifacts{ archives jar } After that, the plugin is active and your project will automatically be configured to resolve dependencies from Artifactory.","title":"Adding to Project"},{"location":"gradle/#using-command-line-tools","text":"Run ./gradlew <command> to execute a Gradle command.","title":"Using Command Line Tools"},{"location":"gradle/#war","text":"./gradlew gradle war Or use the Gradle toolbar in IntelliJ. War file is located in build/libs/","title":"War"},{"location":"gradle/#notes","text":"Do not confuse the global .gradle directory, which resides in the same directory as Gradle (e.g. gradle-4.7), with your project's .gradle directory, located in your project root.","title":"Notes"},{"location":"gradle/#resources","text":"(Spring Gradle)[https://www.jetbrains.com/help/idea/creating-and-managing-modules.html] Gradle When change gradle build: Right click Project > Gradle > Refresh File > Import > Gradle > Existing Gradle Project - Override workspace settings - Local installation directory = .../tools/gradle-4.7 Or Configure Workspace Settings Remove: - settings/ - project - classpath Because Gradle creates these fresh.","title":"Resources"},{"location":"hg-crib-sheet/","text":"Mercurial Crib Sheet","title":"Mercurial Crib Sheet"},{"location":"hg-crib-sheet/#mercurial-crib-sheet","text":"","title":"Mercurial Crib Sheet"},{"location":"latex/","text":"LaTeX https://tex.stackexchange.com/questions/107599/what-is-miktex // This has links to several useful resources. TeX is a computer program for typesetting documents, created by D. E. Knuth. LaTeX, written by L. B. Lamport, is a 'dialect' of TeX. It is suited to long articles and books, since it has facilities for the automatic numbering of chapters, sections, theorems, equations etc., and also has facilities for cross-referencing. MikTeX is a distribution of TeX for Windows, and everything you need to run LaTeX is in MikTeX. TeXworks is the editor that comes with MikTeX. XeLaTeX is essentially a replacement for pdfLaTeX. https://www.maths.tcd.ie/~dwilkins/LaTeXPrimer/ Compiling a latex documents may take several steps when bibtex is used with latex. However, this latex compilation process is the same for most documents. We can make it a template with Makefile so that simply running make will generate the dvi/ps/pdf files for us. Books: LaTeX Cookbook: Has example thesis, book, presentation, CV ... By default, when make looks for the makefile, it tries the following names, in order: GNUmakefile, makefile and Makefile.","title":"Latex"},{"location":"mysys2/","text":"msys2 https://github.com/msys2/msys2/wiki/MSYS2-introduction Subsystems * mingw32 * mingw64 * msys2 (builds on Cygwin project) Shells * purple msys2 shell for running pacman, makepkg, makepkg-mingw and for building POSIX-dependent software that you don't intend to distribute. * blue mingw shells for building native Windows software and other tasks. About - Pacman package manager (like Homebrew for Mac). - Unix-like environment. Install - Add to environment variable for my account. - Open the Purple msys2 executable and run the following: pacman -Syu pacman -Syu pacman -Sy mingw-w64-x86_64-toolchain pacman -Sy mingw-w64-x86_64-qt5 MINGW64 Shell Commands $ find . -iname \"PlanService.wsdl\" $ find . -iname \"AbstractGriddedSurfaceType.*\" $ grep","title":"Mysys2"},{"location":"npm-yarn/","text":"npm and Yarn npm Getting Started package.json package-lock.json Install dependencies $ npm install Update only what has changed? $ npm update Start the server (e.g. localhost:8080) $ npm start Remove and reinstall all the dependencies $ rm -rf node_modules/ $ npm install","title":"npm and Yarn"},{"location":"npm-yarn/#npm-and-yarn","text":"","title":"npm and Yarn"},{"location":"npm-yarn/#npm","text":"","title":"npm"},{"location":"npm-yarn/#getting-started","text":"package.json package-lock.json","title":"Getting Started"},{"location":"npm-yarn/#install-dependencies","text":"$ npm install","title":"Install dependencies"},{"location":"npm-yarn/#update-only-what-has-changed","text":"$ npm update","title":"Update only what has changed?"},{"location":"npm-yarn/#start-the-server-eg-localhost8080","text":"$ npm start","title":"Start the server (e.g. localhost:8080)"},{"location":"npm-yarn/#remove-and-reinstall-all-the-dependencies","text":"$ rm -rf node_modules/ $ npm install","title":"Remove and reinstall all the dependencies"},{"location":"package-management/","text":"Package Management Homebrew https://docs.brew.sh/FAQ $ brew --cache /Users/username/Library/Caches/Homebrew npm yarn Install yarn npm install yarn \u2014global Better than global install (requires MacOS) brew install yarn Brew is a native OS package manager.","title":"Package Management"},{"location":"package-management/#package-management","text":"","title":"Package Management"},{"location":"package-management/#homebrew","text":"https://docs.brew.sh/FAQ $ brew --cache /Users/username/Library/Caches/Homebrew","title":"Homebrew"},{"location":"package-management/#npm","text":"","title":"npm"},{"location":"package-management/#yarn","text":"Install yarn npm install yarn \u2014global Better than global install (requires MacOS) brew install yarn Brew is a native OS package manager.","title":"yarn"},{"location":"ruby-rails/","text":"Rails Getting Started Install gem install rails Create new $ rails new app_name Preview Rails comes with a web server called Puma that provides immediate web browser access to your application. # Launch Puma web server $ rails server Resources http://guides.rubyonrails.org/command_line.html Languages ERB (a.k.a. Erubis) A templating markup language for Rails. Examples: # Evaluates Ruby expression <% just run code %> # Runs and outputs to string <%= run code and output the result %> Other options: Haml Rake Commands $ rake db:create $ rake db:migrate As of Rails 5, you can now run rails db:create . AWS S3 AWS S3 (Simple Storage Service) Stores files in \"buckets,\" which are top-level directories. Access Key ID: your S3 user account identifier Secret Access Key: your secret password","title":"Rails"},{"location":"ruby-rails/#rails","text":"","title":"Rails"},{"location":"ruby-rails/#getting-started","text":"","title":"Getting Started"},{"location":"ruby-rails/#install","text":"gem install rails","title":"Install"},{"location":"ruby-rails/#create-new","text":"$ rails new app_name","title":"Create new"},{"location":"ruby-rails/#preview","text":"Rails comes with a web server called Puma that provides immediate web browser access to your application. # Launch Puma web server $ rails server","title":"Preview"},{"location":"ruby-rails/#resources","text":"http://guides.rubyonrails.org/command_line.html Languages","title":"Resources"},{"location":"ruby-rails/#erb-aka-erubis","text":"A templating markup language for Rails. Examples: # Evaluates Ruby expression <% just run code %> # Runs and outputs to string <%= run code and output the result %> Other options: Haml Rake","title":"ERB (a.k.a. Erubis)"},{"location":"ruby-rails/#commands","text":"$ rake db:create $ rake db:migrate As of Rails 5, you can now run rails db:create . AWS S3","title":"Commands"},{"location":"ruby-rails/#aws-s3-simple-storage-service","text":"Stores files in \"buckets,\" which are top-level directories. Access Key ID: your S3 user account identifier Secret Access Key: your secret password","title":"AWS S3 (Simple Storage Service)"},{"location":"scripts/","text":"Scripts Batch Script Example batch-script-example.bat cd C:\\Users\\sclark\\ git clone <github-address> git clone <github-address> pause","title":"Scripts"},{"location":"scripts/#scripts","text":"","title":"Scripts"},{"location":"scripts/#batch-script-example","text":"batch-script-example.bat cd C:\\Users\\sclark\\ git clone <github-address> git clone <github-address> pause","title":"Batch Script Example"},{"location":"scrum/","text":"Scrum Ceremony Checklist Invites Ceremony Date Time [ ] PO Grooming [ ] Dev Grooming [ ] Pre-planning [ ] Dry Run [ ] Sprint Review [ ] Retrospective [ ] Planning","title":"Scrum"},{"location":"scrum/#scrum","text":"","title":"Scrum"},{"location":"scrum/#ceremony-checklist","text":"Invites Ceremony Date Time [ ] PO Grooming [ ] Dev Grooming [ ] Pre-planning [ ] Dry Run [ ] Sprint Review [ ] Retrospective [ ] Planning","title":"Ceremony Checklist"},{"location":"time-management/","text":"Time Management Parkinson's Law Work expands so as to fill the time available for its completion. Student's Syndrome A tendency to delay starting an assignment until it is almost too late to get it done on time. Murphy's Law If something can go wrong, it will. Backend Load Little work on the task in the early part of assigned time followed by colossal effort in the last minute. Negative outcomes: Overshooting the deadline Insufficient solution Low-quality solution Uniform Load Completing equal parts of the task in equal intervals of time. Potential problems: Accuracy of estimate Measure of progress No protection from Murphy Frontend Load Doing as much of the task as possible right up front. Ensures the solution is complete, of good quality, and even if the task is not tangible or the estimate was inaccurate, with most of the task done, the chances of hitting the estimate are very good. Focus of this technique: Address the largest, most significant, most complex, or riskiest part of the task first (risk includes the risk of delay). Time-slice units: Plan periodic targets. Setting these milestones will ensure that the task is proceeding as desired. Frontend load has the following advantages: It reduces the probability of overshooting the deadline (it is still possible to overshoot the deadline if the estimate were inaccurate or if the scope suddenly increased). It does not require compromises such as reduced quality or sufficiency. This method provides some insulation against Murphy's Law. Frontend load counters the limitation of uniform load by: Addressing the most significant part of the task first balances inaccuracies of estimation Use of the time-slice units ensures accurate measure of progress Changing your perspective When you see a mountain in the distance, it appears as small as a molehill, but when it is mere feet away, it is large. Similarly, when a deadline is far away in time, it is a mere molehill, but when it looms ahead, it appears as a mountain. The mind gives only as much attention to a task as its perceived size. When it is a molehill, the mind ignores it. As the task grows in size as the deadline draws nearer, the mind turns its attention upon it. To overcome issues arising from this way of thinking, you can use what I call the perspective strategy for efficiency. If you were driving on a deserted highway and you notice a rock in the middle of the road about a mile away, you will not adjust your speed or direction until it looms near you. Similarly, when we look at a task along the time dimension, we will not react to the deadline until it looms large in front of us. People tend to look at tasks along the time dimension. To counter this, let us take a look at the task without any thought to the time available for its completion. Now, the task will grab our attention, we will see its true size, we will attack it, whittle it down to size, then overcome it. According to Nathaniel Kleitman, the human brain works best with a 20-minute break after 90 minutes of work. Others like Dr. Ernest Rossi have noted the 90-minute cycles, with peak focus for about 45 minutes. Tony Schwartz of the Energy Project recommends three 90-minute sessions in 8 hours of work. The verdict is outdon't work for more than 90 minutes at a time on any task. What if you do go beyond the 90-minute recommendation? Two things happen. First, your productivity drops sharply. Second, you are a sitting target for the next distraction that waits around the corner. What is the alternative? The alternative is to deliberately distract yourself. Here is how it works: 1. Make a list of short tasks (10-15 minutes). This is the \"deliberate distractions\" list. 2. Set a timer for 75 minutes 3. After the timer signals you, bring the main task to a logical pause, that is, a safe state to be interrupted. Make a note of all the things that would enable you to resume the task easily. 4. Take a 20-minute break. 5. Complete one of the tasks on your list of deliberate distractions. 6. Restart the 75-minute timer and resume the main task. This is a very powerful tool to control brain fatigue. Exercises The first exercise in this chapter is a discussion to identify time wasters not listed in earlier sections. This discussion serves to extend the list and also to make the students aware of and be alert for potential time traps. The second exercise in this chapter is to identify one occasion in your lives when you did not meet a deadline, identify reason(s) why things took longer than assigned or estimated, discover how you could have recognized the time trap(s), and come up with strategies to avoid the time trap(s) or recover from it (them) when it (they) occur(s). The third exercise is an on-going activity to keep track of time wasters and devise strategies for avoidance and recovery. From Stressaholics book: Time management experts have estimated that it can take up to 20 minutes to recover from a distraction, with more complex tasks taking a greater toll on what's called switch cost the time taken to adjust mental settings and competition due to carrying over mental controls from the previous task. Why Focus is So Important Without focus, tasks end up getting stretched out over a very long period of time. Distractions that break our focus or prevent us from ever getting intend up costing us more than the time they take away. If you have to constantly stop and start, you'll be forced to go at a much slower speed overall. Not Easy to Get Into Focus Mode If you want to get into a focused mode, you have to realize that it isnt an instant switch that you can flip. To get into it, you have to push through the initial pain of contorting your mind to a single task. You have to realize that the pain and discomfort is only temporary and doesn't really last that long. Book recommendation: Kanban in Action, The War of Art, Drive Kanban board tool (has built-in Pomodoro timer): http://simpleprogrammer.com/ss-kanbanflow Planning Technique Quarterly Choose a project to do over next three months. List all the steps/tasks necessary to achieve it. Assign a time value to each step. Put steps in sequential order. Monthly Print out calendar for the month. Take items from quarterly outline and schedule them into the calendar. Weekly Make Kanban board with these columns: - To Do - Monday - Tuesday - Wednesday - Thursday - Friday - Done - Next Week (optional) Vacations from Planning Sometimes good to spend a week just coasting at work, where you just work on whatever you want and you don't measure your productivity. Quotas This idea is the core of the system. You don't leave yourself any choice but to do what you set out to do. In your mind, failure cant be an option. The whole system falls apart if your commitment is weak, so you have to choose attainable and maintainable quotas. Well, if you're having trouble with multitasking during the day because there are multiple tasks you have to get done, you'll probably be better off learning how to batch those tasks and work on a series of related tasks all at once rather than splitting them up throughout the day. Time Wasters I found that by replacing the time I was spending watching TV with working on this project that I enjoyed, I was getting a lot more done and I was feeling better about it. Landmines TV Social media Emails Meetings Cooking Videogames Coffee breaks Track your time to see where you are wasting it.","title":"Time management"},{"location":"time-management/#time-management","text":"Parkinson's Law Work expands so as to fill the time available for its completion. Student's Syndrome A tendency to delay starting an assignment until it is almost too late to get it done on time. Murphy's Law If something can go wrong, it will.","title":"Time Management"},{"location":"time-management/#backend-load","text":"Little work on the task in the early part of assigned time followed by colossal effort in the last minute. Negative outcomes: Overshooting the deadline Insufficient solution Low-quality solution","title":"Backend Load"},{"location":"time-management/#uniform-load","text":"Completing equal parts of the task in equal intervals of time. Potential problems: Accuracy of estimate Measure of progress No protection from Murphy","title":"Uniform Load"},{"location":"time-management/#frontend-load","text":"Doing as much of the task as possible right up front. Ensures the solution is complete, of good quality, and even if the task is not tangible or the estimate was inaccurate, with most of the task done, the chances of hitting the estimate are very good. Focus of this technique: Address the largest, most significant, most complex, or riskiest part of the task first (risk includes the risk of delay). Time-slice units: Plan periodic targets. Setting these milestones will ensure that the task is proceeding as desired. Frontend load has the following advantages: It reduces the probability of overshooting the deadline (it is still possible to overshoot the deadline if the estimate were inaccurate or if the scope suddenly increased). It does not require compromises such as reduced quality or sufficiency. This method provides some insulation against Murphy's Law. Frontend load counters the limitation of uniform load by: Addressing the most significant part of the task first balances inaccuracies of estimation Use of the time-slice units ensures accurate measure of progress Changing your perspective When you see a mountain in the distance, it appears as small as a molehill, but when it is mere feet away, it is large. Similarly, when a deadline is far away in time, it is a mere molehill, but when it looms ahead, it appears as a mountain. The mind gives only as much attention to a task as its perceived size. When it is a molehill, the mind ignores it. As the task grows in size as the deadline draws nearer, the mind turns its attention upon it. To overcome issues arising from this way of thinking, you can use what I call the perspective strategy for efficiency. If you were driving on a deserted highway and you notice a rock in the middle of the road about a mile away, you will not adjust your speed or direction until it looms near you. Similarly, when we look at a task along the time dimension, we will not react to the deadline until it looms large in front of us. People tend to look at tasks along the time dimension. To counter this, let us take a look at the task without any thought to the time available for its completion. Now, the task will grab our attention, we will see its true size, we will attack it, whittle it down to size, then overcome it. According to Nathaniel Kleitman, the human brain works best with a 20-minute break after 90 minutes of work. Others like Dr. Ernest Rossi have noted the 90-minute cycles, with peak focus for about 45 minutes. Tony Schwartz of the Energy Project recommends three 90-minute sessions in 8 hours of work. The verdict is outdon't work for more than 90 minutes at a time on any task. What if you do go beyond the 90-minute recommendation? Two things happen. First, your productivity drops sharply. Second, you are a sitting target for the next distraction that waits around the corner. What is the alternative? The alternative is to deliberately distract yourself. Here is how it works: 1. Make a list of short tasks (10-15 minutes). This is the \"deliberate distractions\" list. 2. Set a timer for 75 minutes 3. After the timer signals you, bring the main task to a logical pause, that is, a safe state to be interrupted. Make a note of all the things that would enable you to resume the task easily. 4. Take a 20-minute break. 5. Complete one of the tasks on your list of deliberate distractions. 6. Restart the 75-minute timer and resume the main task. This is a very powerful tool to control brain fatigue. Exercises The first exercise in this chapter is a discussion to identify time wasters not listed in earlier sections. This discussion serves to extend the list and also to make the students aware of and be alert for potential time traps. The second exercise in this chapter is to identify one occasion in your lives when you did not meet a deadline, identify reason(s) why things took longer than assigned or estimated, discover how you could have recognized the time trap(s), and come up with strategies to avoid the time trap(s) or recover from it (them) when it (they) occur(s). The third exercise is an on-going activity to keep track of time wasters and devise strategies for avoidance and recovery. From Stressaholics book: Time management experts have estimated that it can take up to 20 minutes to recover from a distraction, with more complex tasks taking a greater toll on what's called switch cost the time taken to adjust mental settings and competition due to carrying over mental controls from the previous task. Why Focus is So Important Without focus, tasks end up getting stretched out over a very long period of time. Distractions that break our focus or prevent us from ever getting intend up costing us more than the time they take away. If you have to constantly stop and start, you'll be forced to go at a much slower speed overall. Not Easy to Get Into Focus Mode If you want to get into a focused mode, you have to realize that it isnt an instant switch that you can flip. To get into it, you have to push through the initial pain of contorting your mind to a single task. You have to realize that the pain and discomfort is only temporary and doesn't really last that long. Book recommendation: Kanban in Action, The War of Art, Drive Kanban board tool (has built-in Pomodoro timer): http://simpleprogrammer.com/ss-kanbanflow Planning Technique Quarterly Choose a project to do over next three months. List all the steps/tasks necessary to achieve it. Assign a time value to each step. Put steps in sequential order. Monthly Print out calendar for the month. Take items from quarterly outline and schedule them into the calendar. Weekly Make Kanban board with these columns: - To Do - Monday - Tuesday - Wednesday - Thursday - Friday - Done - Next Week (optional) Vacations from Planning Sometimes good to spend a week just coasting at work, where you just work on whatever you want and you don't measure your productivity. Quotas This idea is the core of the system. You don't leave yourself any choice but to do what you set out to do. In your mind, failure cant be an option. The whole system falls apart if your commitment is weak, so you have to choose attainable and maintainable quotas. Well, if you're having trouble with multitasking during the day because there are multiple tasks you have to get done, you'll probably be better off learning how to batch those tasks and work on a series of related tasks all at once rather than splitting them up throughout the day. Time Wasters I found that by replacing the time I was spending watching TV with working on this project that I enjoyed, I was getting a lot more done and I was feeling better about it. Landmines TV Social media Emails Meetings Cooking Videogames Coffee breaks Track your time to see where you are wasting it.","title":"Frontend Load"},{"location":"tomcat/","text":"Tomcat Getting started: tomcat/webapps/ .war $ cd path/to/tomcat $ startup.bat localhost:8081/project $ shutdown.bat Tomcat in Eclipse: wtpwebapps/ <-- Eclipse webapps/ <-- Manually add .war Server instance running in Eclipse is \"dev\" mode. No war necessary. Resources https://stackoverflow.com/questions/51434930/how-to-hot-reload-tomcat-server-in-vscode","title":"Tomcat"},{"location":"tomcat/#resources","text":"https://stackoverflow.com/questions/51434930/how-to-hot-reload-tomcat-server-in-vscode","title":"Resources"},{"location":"user-stories/","text":"User Stories User stories should be: \u2022 Independent \u2022 Negotiable \u2022 Valuable \u2022 Estimable \u2022 Small \u2022 Testable Stories usually comprised of: 1. A story card 2. Any conversations between the customer and team 3. After delivery, customer confirmation that delivery meets acceptance criteria. Stories should include: WHO wants a feature. It is good practice to write the \u2018Who\u2019 statement in the stories from the perspective of an any person or group who will interact with the features being created. WHAT feature they want. WHY they want the feature. This may be tied into a business case if one exists. Acceptance Criteria: This is normally a list of questions, scenarios or examples that enable the customer to sign off the story as \u2018done\u2019. On Kanboard: Summary As a ,/ I want ,/ so that . Acceptance Criteria Given ,/ when ,/ then . Stories define what's required from the team by the customer and stakeholders. A story is not a detailed specification of a requirement. It's a reminder that a feature needs to be delivered. Notes from Ben It's supposed to be the product owner (Bruce) who writes the stories, and the developers are supposed to ask questions to verify they understand. However, in practice, Ben and Bruce just sort of know what needs to be done, and have a hard time putting it into \"story form.\" Talk to Brittney. She wrote great stories for EPMA project. Dakota would also like to be there if she provides training on this. Notes from D9K D9K says an \"8\" is one person, one sprint. 1 pt = 6 hrs = .60 x one 10-hr day 4 pts per week Sprints are two weeks, so 4 story points per week.","title":"User Stories"},{"location":"user-stories/#user-stories","text":"","title":"User Stories"},{"location":"user-stories/#user-stories-should-be","text":"\u2022 Independent \u2022 Negotiable \u2022 Valuable \u2022 Estimable \u2022 Small \u2022 Testable","title":"User stories should be:"},{"location":"user-stories/#stories-usually-comprised-of","text":"1. A story card 2. Any conversations between the customer and team 3. After delivery, customer confirmation that delivery meets acceptance criteria.","title":"Stories usually comprised of:"},{"location":"user-stories/#stories-should-include","text":"WHO wants a feature. It is good practice to write the \u2018Who\u2019 statement in the stories from the perspective of an any person or group who will interact with the features being created. WHAT feature they want. WHY they want the feature. This may be tied into a business case if one exists. Acceptance Criteria: This is normally a list of questions, scenarios or examples that enable the customer to sign off the story as \u2018done\u2019.","title":"Stories should include:"},{"location":"user-stories/#on-kanboard","text":"","title":"On Kanboard:"},{"location":"user-stories/#summary","text":"As a ,/ I want ,/ so that .","title":"Summary"},{"location":"user-stories/#acceptance-criteria","text":"Given ,/ when ,/ then . Stories define what's required from the team by the customer and stakeholders. A story is not a detailed specification of a requirement. It's a reminder that a feature needs to be delivered.","title":"Acceptance Criteria"},{"location":"user-stories/#notes-from-ben","text":"It's supposed to be the product owner (Bruce) who writes the stories, and the developers are supposed to ask questions to verify they understand. However, in practice, Ben and Bruce just sort of know what needs to be done, and have a hard time putting it into \"story form.\" Talk to Brittney. She wrote great stories for EPMA project. Dakota would also like to be there if she provides training on this.","title":"Notes from Ben"},{"location":"user-stories/#notes-from-d9k","text":"D9K says an \"8\" is one person, one sprint. 1 pt = 6 hrs = .60 x one 10-hr day 4 pts per week Sprints are two weeks, so 4 story points per week.","title":"Notes from D9K"},{"location":"vcs/","text":"Version Control Systems (VCS) Git Mercurial Used this in Elias's section. Repository Clouds BitBucket GitHub","title":"Version Control Systems (VCS)"},{"location":"vcs/#version-control-systems-vcs","text":"","title":"Version Control Systems (VCS)"},{"location":"vcs/#git","text":"","title":"Git"},{"location":"vcs/#mercurial","text":"Used this in Elias's section.","title":"Mercurial"},{"location":"vcs/#repository-clouds","text":"","title":"Repository Clouds"},{"location":"vcs/#bitbucket","text":"","title":"BitBucket"},{"location":"vcs/#github","text":"","title":"GitHub"},{"location":"virtual-env/","text":"Virtual Environment Install $ mkdir Environments $ virtualenv --version # Check the install $ virtualenv <test-environment> # If you only have Python 3 on your machine $ source <test-environment>/bin/activate Remove $ cd <test-environment> $ deactivate $ cd .. $ sudo rm -rf <test-environment> Resources https://docs.djangoproject.com/en/3.0/intro/contributing/ https://realpython.com/python-virtual-environments-a-primer/ https://djangocentral.com/how-to-a-create-virtual-environment-for-python/","title":"Virtual Environment"},{"location":"virtual-env/#virtual-environment","text":"","title":"Virtual Environment"},{"location":"virtual-env/#install","text":"$ mkdir Environments $ virtualenv --version # Check the install $ virtualenv <test-environment> # If you only have Python 3 on your machine $ source <test-environment>/bin/activate","title":"Install"},{"location":"virtual-env/#remove","text":"$ cd <test-environment> $ deactivate $ cd .. $ sudo rm -rf <test-environment>","title":"Remove"},{"location":"virtual-env/#resources","text":"https://docs.djangoproject.com/en/3.0/intro/contributing/ https://realpython.com/python-virtual-environments-a-primer/ https://djangocentral.com/how-to-a-create-virtual-environment-for-python/","title":"Resources"},{"location":"web-services/","text":"Web Services A Web service is merely an API wrapped in HTTP. A Web service always needs a network for its operation. A Web service uses only SOAP, REST and XML-RPC for communication. No visual interface. Protocol Buffers Human to App Web browser sends HTTP GET request and server sends HTTP response. App to App (back end) App sends XML request and server sends XML response. What is a web service? Service that's available over a network, uses a standardized XML messaging system, and is not tied to any one operating system or programming language. Helps integrate one enterprise app w/ another. Talk to each other using HTTP & XML or JSON. All web services are APIs, but not all APIs are web services. What is the web service protocol stack? What is XML messaging? Service description? Service discovery? Thin clients (soft clients) prototype: students Swagger UI Postman xjc - Schema to Java compiler This line goes in build.xml: Resources Service-Oriented Architecture Using JAX-RS with Protocol Buffers Google Protocol Buffer Google Tutorial Resources Using JAX-RS with Protocol Buffers Google Protocol Buffer Google Tutorial URIs rest-api-best-practices-where-to-put-parameters RFC spec document REST RESTful APIs Best Practices 1. Keep it simple We need to make sure that the base URL of the API is simple. API to get all products. /products API to get a specific product. /products/12345 2. Use nouns -- not verbs 3. Use of right HTTP methods RESTful APIs have various methods to indicate the type of operation we are going to perform with this API. We need to make sure we use the right HTTP method for given operation. GET\u200a\u2014\u200aTo get a resource or collection of resources. POST\u200a\u2014\u200aTo create a resource or collection of resources. PUT/PATCH\u200a\u2014\u200aTo update the existing resource or collection of resources. DELETE\u200a\u2014\u200aTo delete the existing resource or the collection of resources. 4. Use plurals Using plural avoids confusion whether we are talking about getting single resource or a collection. It also avoids adding additional things like attaching \"all\" to the base URL e.g. /product/all . 5. Use parameters Sometimes we need an API which should be telling more story than just by id. To avoid long URLs, make use of query parameters to design the API. /products?name='ABC' <-- good /getProductsByName <-- bad /products?type='xyz' /getProductsByType 6. Use proper HTTP codes We have plenty of HTTP codes. Most of us only end up using two\u200a\u2014\u200a200 and 500! This is certainly not a good practice. Following are some commonly used HTTP codes. 200 OK\u200a\u2014\u200aThis is most commonly used HTTP code to show that the operation performed is successful. 201 CREATED\u200a\u2014\u200aThis can be used when you use POST method to create a new resource. 202 ACCEPTED\u200a\u2014\u200aThis can be used to acknowledge the request sent to the server. 400 BAD REQUEST\u200a\u2014\u200aThis can be used when client side input validation fails. 401 UNAUTHORIZED / 403 FORBIDDEN\u2014 This can be used if the user or the system is not authorised to perform certain operation. 404 NOT FOUND\u2014 This can be used if you are looking for certain resource and it is not available in the system. 500 INTERNAL SERVER ERROR\u200a\u2014\u200aThis should never be thrown explicitly but might occur if the system fails. 502 BAD GATEWAY\u200a\u2014\u200aThis can be used if server received an invalid response from the upstream server. Use pagination Use of pagination is a must when you expose an API which might return huge data and if proper load balancing is not done, the a consumer might end up bringing down the service. Use of limit and offset is recommended here. For example, /products?limit=25&offset=50 . It is also advised to keep a default limit and default offset. 7. Supported formats If is also important to choose how your API responds. Most of the modern day applications should return JSON responses unless you have an legacy app which still needs to get XML response. 8. Use proper error messages It is always a good practice to keep set of error messages application sends and respond that with proper id. For example, if you use Facebook graph APIs, in case of errors, it returns message like this \u2014 { \"error\": { \"message\": \"(#803) Some of the aliases you requested do not exist: products\", \"type\": \"OAuthException\", \"code\": 803, \"fbtrace_id\": \"FOXX2AhLh80\" } } I have also seen some examples in which people return URL with error message which tells you more about the error message and how to handle it as well. 9. Use of Open API specifications In order to keep all teams in your company abide to certain principles, use of OpenAPI Specification can be useful. Open API allows you to design your APIs first and share that with the consumers in easier manner. JAX-RS Standard JAX-RS uses an Application as its configuration class. A \"convenience class\" (e.g. ApplicationConfig or ResourceConfig) extends Application. There a three main ways (in a servlet container) to configure Jersey (JAX-RS): With only web.xml With both web.xml and an Application/ResourceConfig class With only an Application/ResourceConfig class annotated with @ApplicationPath. https://stackoverflow.com/questions/45625925/what-exactly-is-the-resourceconfig-class-in-jersey-2 @QueryParam http://www.appsdeveloperblog.com/jax-rs-queryparam/ https://memorynotfound.com/jaxrs-queryparam-example/ Jersey https://memorynotfound.com/jax-rs-rest-service-example-jersey-java/ XML XML Schemas (XSD) Definition A schema is metadata that tells us how our data is structured. Most databases implement some form of schema which enables us to reason about our data in a more structured manner. The WordPress REST API utilizes JSON Schema to handle the structuring of its data. You can implement endpoints without using a schema, but you will be missing out on a lot of things. It is up to you to decide what suits you best. XSD (XML Schema Declaration) A schema is an XML specification that governs the allowable components of an XML document and the relationships between the components. An XML document doesn't have to have a schema. A valid XML document must conform to its schema. - XML schema definition - Used for validation A Schema Defines: The elements that can appear in an XML document The order they must appear in The attributes they can have Which elements are subordinate (that is, are child elements) to other elements JAXB Requires: The XML document you want to access has a schema The schema is written in the W3C XML Schema Language JAXB Java Architecture for XML Binding (JAXB) You can parse XML using SAX and DOM; however, this is unnecessary with JAXB. Benefits of JAXB Makes it easier to access XML documents from applications written in the Java programming language. Allows Java developers to access and process XML data without having to know XML or XML processing. For example, there's no need to create or use a SAX parser or write callback methods. XSD \"XML Schema Definition\" An XML Schema (.xsd file) describes the structure of an XML document. It's used to define what elements and attributes may appear in an XML document. It also defines the relationship of the elements and what data may be stored in them. Marshalling & Unmarshalling Marshalling and Unmarshalling XML data using JAXB Marshalling \"writing XML data\" Convert a Java object into XML file Convert Java Object to XML specific order using JAX-B Unmarshalling \"reading xml data\" Convert XML files to Java objects No XSD Model your data as Java classes. Add JAXB annotations to these classes. Use JAXB to generate an XML schema for your data. Run the Schema Generator in terminal: $ schemagen Product.java With XSD Oracle Binding between XML Schema and Java Classes * Bind the schema into a set of Java classes that represents the schema. * Unmarshal the document into Java content objects. The Java content objects represent the content and organization of the XML document, and are directly available to your program. xjc command generates the source code for Java classes that correspond to the types defined in the .xsd file. Run the JAXB schema compiler tool in terminal: $ xjc Product.xsd The -p option identifies a package for the generated classes, and the -d option identifies a target directory. So for this command, the classes are packaged in test.jaxb within the work directory. xjc.sh -p test.jaxb books.xsd -d work The binding compiler generates a set of interfaces and a set of classes that implement the interfaces. Using Name Prefixes https://www.w3schools.com/xml/xml_namespaces.asp Resources Vogella JAXB Tutorial In this example you\u2019ll learn how to use the JAXB @XmlElementWrapper annotation. Java Examples for javax.xml.bind.annotation.XmlElementWrapper Serialization To serialize an object means to convert its state to a byte stream so that the byte stream can be reverted back into a copy of the object. Sparkfun Serial Communication Serialization in Java Validation How to validate a JAXB object model against an XML schema tutorialspoint XSD Validation How to generate JAXB classes from xsd Generate Java Classes From XSD Product tutorial https://howtodoinjava.com/jaxb/marshaller-example/ https://stackoverflow.com/questions/8177377/dynamic-jaxb-xml-deserialization-unmarshalling https://stackoverflow.com/questions/15820779/writing-from-java-to-an-xml-document-simple https://docs.oracle.com/javase/7/docs/api/javax/xml/bind/Marshaller.html https://stackoverflow.com/questions/11463231/how-to-generate-jaxb-classes-from-xsd https://docs.oracle.com/javase/7/docs/api/javax/xml/bind/Unmarshaller.html https://docs.oracle.com/javaee/7/api/javax/xml/bind/Unmarshaller.html https://springframework.guru/using-jaxb-for-xml-with-java/ https://www.ibm.com/support/knowledgecenter/en/SS7JFU_8.5.5/com.ibm.websphere.express.doc/ae/twbs_jaxbmarshalxml.html Lucene Basics Lucene is a full-text search Java API. Use it to easily add search functionality to an application or website. Index Lucene adds content to a full-text index . Sources of content include SQL/NoSQL databases, filesystems, or even websites. Search Lucene allows you to query this index and returns results. Results are ranked by either the relevance to the query or sorted by an arbitrary field such as a document's last modified date. Versions Examples org.apache.lucene.search.IndexSearcher // Lucene 3.4.0 org.apache.lucene.store.IndexSearcher // TrackDB project (unknown Lucene version) Resources Lucene 3.4.0 API TrackDB from old Elias/Bruce repo that demos Lucene. store.IndexSearcher class not available in Lucene 3.4.0. JAX WS Java API for web services (SOAP).","title":"Web Services"},{"location":"web-services/#web-services","text":"A Web service is merely an API wrapped in HTTP. A Web service always needs a network for its operation. A Web service uses only SOAP, REST and XML-RPC for communication. No visual interface. Protocol Buffers Human to App Web browser sends HTTP GET request and server sends HTTP response. App to App (back end) App sends XML request and server sends XML response. What is a web service? Service that's available over a network, uses a standardized XML messaging system, and is not tied to any one operating system or programming language. Helps integrate one enterprise app w/ another. Talk to each other using HTTP & XML or JSON. All web services are APIs, but not all APIs are web services. What is the web service protocol stack? What is XML messaging? Service description? Service discovery? Thin clients (soft clients) prototype: students Swagger UI Postman xjc - Schema to Java compiler This line goes in build.xml:","title":"Web Services"},{"location":"web-services/#resources","text":"Service-Oriented Architecture Using JAX-RS with Protocol Buffers Google Protocol Buffer Google Tutorial","title":"Resources"},{"location":"web-services/#resources_1","text":"Using JAX-RS with Protocol Buffers Google Protocol Buffer Google Tutorial URIs rest-api-best-practices-where-to-put-parameters RFC spec document REST RESTful APIs","title":"Resources"},{"location":"web-services/#best-practices","text":"","title":"Best Practices"},{"location":"web-services/#1-keep-it-simple","text":"We need to make sure that the base URL of the API is simple. API to get all products. /products API to get a specific product. /products/12345","title":"1. Keep it simple"},{"location":"web-services/#2-use-nouns-not-verbs","text":"","title":"2. Use nouns -- not verbs"},{"location":"web-services/#3-use-of-right-http-methods","text":"RESTful APIs have various methods to indicate the type of operation we are going to perform with this API. We need to make sure we use the right HTTP method for given operation. GET\u200a\u2014\u200aTo get a resource or collection of resources. POST\u200a\u2014\u200aTo create a resource or collection of resources. PUT/PATCH\u200a\u2014\u200aTo update the existing resource or collection of resources. DELETE\u200a\u2014\u200aTo delete the existing resource or the collection of resources.","title":"3. Use of right HTTP methods"},{"location":"web-services/#4-use-plurals","text":"Using plural avoids confusion whether we are talking about getting single resource or a collection. It also avoids adding additional things like attaching \"all\" to the base URL e.g. /product/all .","title":"4. Use plurals"},{"location":"web-services/#5-use-parameters","text":"Sometimes we need an API which should be telling more story than just by id. To avoid long URLs, make use of query parameters to design the API. /products?name='ABC' <-- good /getProductsByName <-- bad /products?type='xyz' /getProductsByType","title":"5. Use parameters"},{"location":"web-services/#6-use-proper-http-codes","text":"We have plenty of HTTP codes. Most of us only end up using two\u200a\u2014\u200a200 and 500! This is certainly not a good practice. Following are some commonly used HTTP codes. 200 OK\u200a\u2014\u200aThis is most commonly used HTTP code to show that the operation performed is successful. 201 CREATED\u200a\u2014\u200aThis can be used when you use POST method to create a new resource. 202 ACCEPTED\u200a\u2014\u200aThis can be used to acknowledge the request sent to the server. 400 BAD REQUEST\u200a\u2014\u200aThis can be used when client side input validation fails. 401 UNAUTHORIZED / 403 FORBIDDEN\u2014 This can be used if the user or the system is not authorised to perform certain operation. 404 NOT FOUND\u2014 This can be used if you are looking for certain resource and it is not available in the system. 500 INTERNAL SERVER ERROR\u200a\u2014\u200aThis should never be thrown explicitly but might occur if the system fails. 502 BAD GATEWAY\u200a\u2014\u200aThis can be used if server received an invalid response from the upstream server.","title":"6. Use proper HTTP codes"},{"location":"web-services/#use-pagination","text":"Use of pagination is a must when you expose an API which might return huge data and if proper load balancing is not done, the a consumer might end up bringing down the service. Use of limit and offset is recommended here. For example, /products?limit=25&offset=50 . It is also advised to keep a default limit and default offset.","title":"Use pagination"},{"location":"web-services/#7-supported-formats","text":"If is also important to choose how your API responds. Most of the modern day applications should return JSON responses unless you have an legacy app which still needs to get XML response.","title":"7. Supported formats"},{"location":"web-services/#8-use-proper-error-messages","text":"It is always a good practice to keep set of error messages application sends and respond that with proper id. For example, if you use Facebook graph APIs, in case of errors, it returns message like this \u2014 { \"error\": { \"message\": \"(#803) Some of the aliases you requested do not exist: products\", \"type\": \"OAuthException\", \"code\": 803, \"fbtrace_id\": \"FOXX2AhLh80\" } } I have also seen some examples in which people return URL with error message which tells you more about the error message and how to handle it as well.","title":"8. Use proper error messages"},{"location":"web-services/#9-use-of-open-api-specifications","text":"In order to keep all teams in your company abide to certain principles, use of OpenAPI Specification can be useful. Open API allows you to design your APIs first and share that with the consumers in easier manner.","title":"9. Use of Open API specifications"},{"location":"web-services/#jax-rs","text":"Standard JAX-RS uses an Application as its configuration class. A \"convenience class\" (e.g. ApplicationConfig or ResourceConfig) extends Application. There a three main ways (in a servlet container) to configure Jersey (JAX-RS): With only web.xml With both web.xml and an Application/ResourceConfig class With only an Application/ResourceConfig class annotated with @ApplicationPath. https://stackoverflow.com/questions/45625925/what-exactly-is-the-resourceconfig-class-in-jersey-2 @QueryParam http://www.appsdeveloperblog.com/jax-rs-queryparam/ https://memorynotfound.com/jaxrs-queryparam-example/ Jersey https://memorynotfound.com/jax-rs-rest-service-example-jersey-java/ XML XML Schemas (XSD)","title":"JAX-RS"},{"location":"web-services/#definition","text":"A schema is metadata that tells us how our data is structured. Most databases implement some form of schema which enables us to reason about our data in a more structured manner. The WordPress REST API utilizes JSON Schema to handle the structuring of its data. You can implement endpoints without using a schema, but you will be missing out on a lot of things. It is up to you to decide what suits you best.","title":"Definition"},{"location":"web-services/#xsd-xml-schema-declaration","text":"A schema is an XML specification that governs the allowable components of an XML document and the relationships between the components. An XML document doesn't have to have a schema. A valid XML document must conform to its schema. - XML schema definition - Used for validation","title":"XSD (XML Schema Declaration)"},{"location":"web-services/#a-schema-defines","text":"The elements that can appear in an XML document The order they must appear in The attributes they can have Which elements are subordinate (that is, are child elements) to other elements","title":"A Schema Defines:"},{"location":"web-services/#jaxb-requires","text":"The XML document you want to access has a schema The schema is written in the W3C XML Schema Language JAXB Java Architecture for XML Binding (JAXB) You can parse XML using SAX and DOM; however, this is unnecessary with JAXB.","title":"JAXB Requires:"},{"location":"web-services/#benefits-of-jaxb","text":"Makes it easier to access XML documents from applications written in the Java programming language. Allows Java developers to access and process XML data without having to know XML or XML processing. For example, there's no need to create or use a SAX parser or write callback methods.","title":"Benefits of JAXB"},{"location":"web-services/#xsd","text":"\"XML Schema Definition\" An XML Schema (.xsd file) describes the structure of an XML document. It's used to define what elements and attributes may appear in an XML document. It also defines the relationship of the elements and what data may be stored in them.","title":"XSD"},{"location":"web-services/#marshalling-unmarshalling","text":"Marshalling and Unmarshalling XML data using JAXB","title":"Marshalling &amp; Unmarshalling"},{"location":"web-services/#marshalling","text":"\"writing XML data\" Convert a Java object into XML file Convert Java Object to XML specific order using JAX-B","title":"Marshalling"},{"location":"web-services/#unmarshalling","text":"\"reading xml data\" Convert XML files to Java objects","title":"Unmarshalling"},{"location":"web-services/#no-xsd","text":"Model your data as Java classes. Add JAXB annotations to these classes. Use JAXB to generate an XML schema for your data. Run the Schema Generator in terminal: $ schemagen Product.java","title":"No XSD"},{"location":"web-services/#with-xsd","text":"Oracle Binding between XML Schema and Java Classes * Bind the schema into a set of Java classes that represents the schema. * Unmarshal the document into Java content objects. The Java content objects represent the content and organization of the XML document, and are directly available to your program. xjc command generates the source code for Java classes that correspond to the types defined in the .xsd file. Run the JAXB schema compiler tool in terminal: $ xjc Product.xsd The -p option identifies a package for the generated classes, and the -d option identifies a target directory. So for this command, the classes are packaged in test.jaxb within the work directory. xjc.sh -p test.jaxb books.xsd -d work The binding compiler generates a set of interfaces and a set of classes that implement the interfaces.","title":"With XSD"},{"location":"web-services/#using-name-prefixes","text":"https://www.w3schools.com/xml/xml_namespaces.asp","title":"Using Name Prefixes"},{"location":"web-services/#resources_2","text":"Vogella JAXB Tutorial In this example you\u2019ll learn how to use the JAXB @XmlElementWrapper annotation. Java Examples for javax.xml.bind.annotation.XmlElementWrapper","title":"Resources"},{"location":"web-services/#serialization","text":"To serialize an object means to convert its state to a byte stream so that the byte stream can be reverted back into a copy of the object. Sparkfun Serial Communication Serialization in Java","title":"Serialization"},{"location":"web-services/#validation","text":"How to validate a JAXB object model against an XML schema tutorialspoint XSD Validation How to generate JAXB classes from xsd Generate Java Classes From XSD Product tutorial https://howtodoinjava.com/jaxb/marshaller-example/ https://stackoverflow.com/questions/8177377/dynamic-jaxb-xml-deserialization-unmarshalling https://stackoverflow.com/questions/15820779/writing-from-java-to-an-xml-document-simple https://docs.oracle.com/javase/7/docs/api/javax/xml/bind/Marshaller.html https://stackoverflow.com/questions/11463231/how-to-generate-jaxb-classes-from-xsd https://docs.oracle.com/javase/7/docs/api/javax/xml/bind/Unmarshaller.html https://docs.oracle.com/javaee/7/api/javax/xml/bind/Unmarshaller.html https://springframework.guru/using-jaxb-for-xml-with-java/ https://www.ibm.com/support/knowledgecenter/en/SS7JFU_8.5.5/com.ibm.websphere.express.doc/ae/twbs_jaxbmarshalxml.html Lucene","title":"Validation"},{"location":"web-services/#basics","text":"Lucene is a full-text search Java API. Use it to easily add search functionality to an application or website.","title":"Basics"},{"location":"web-services/#index","text":"Lucene adds content to a full-text index . Sources of content include SQL/NoSQL databases, filesystems, or even websites.","title":"Index"},{"location":"web-services/#search","text":"Lucene allows you to query this index and returns results. Results are ranked by either the relevance to the query or sorted by an arbitrary field such as a document's last modified date.","title":"Search"},{"location":"web-services/#versions","text":"","title":"Versions"},{"location":"web-services/#examples","text":"org.apache.lucene.search.IndexSearcher // Lucene 3.4.0 org.apache.lucene.store.IndexSearcher // TrackDB project (unknown Lucene version)","title":"Examples"},{"location":"web-services/#resources_3","text":"Lucene 3.4.0 API TrackDB from old Elias/Bruce repo that demos Lucene. store.IndexSearcher class not available in Lucene 3.4.0.","title":"Resources"},{"location":"web-services/#jax-ws","text":"Java API for web services (SOAP).","title":"JAX WS"},{"location":"data/","text":"HTML is used to structure the text on web pages to be rendered appropriately in web browsers. XML is generally used to structure data or messages. JSON is used to represent data as key-value pairs, which can be easily converted to and from JavaScript objects.","title":"Index"},{"location":"data/geojson/","text":"GeoJSON Basics JSON Dimensions: longitude, latitude (x, y) Coordinate: single decimal number representing a single dimension Position: array of coordinates in order [longitude, latitude, elevation] Geometry Geometries are shapes and nothing more. Point Single position { \"type\": \"Point\", \"coordinates\": [0, 0] } LineString 2+ positions { \"type\": \"LineString\", \"coordinates\": [ [0, 0], [10, 10] ] } Polygon Made up of LinearRings, loops of positions. LinearRings Exterior: Every polygon has one, comes first, defines what's filled Interior: Defines what's empty if polygon has a hole { \"type\": \"Polygon\", \"coordinates\": [ [ [0, 0], [10, 10], [10, 0], [0, 0] ] ] } Properties Can be any kind of JSON object, but usually just single-depth key/value mappings. Feature A feature has geometry and properties. { \"type\": \"Feature\", \"geometry\": { \"type\": \"Point\", \"coordinates\": [0, 0] }, \"properties\": { \"name\": \"null island\" } } Multi Geometries More than one of the same kind of geometry (e.g. United States polygon plus HI polygon and AK polygon). MultiPoint [[0, 0], [1, 1]] MultiPolygon MultiLineString GeometryCollection When you have a bunch of different kinds of geometries that refer to the same thing. Rare. Not recommended. { \"type\": \"Feature\", \"geometry\": { \"type\": \"GeometryCollection\", \"geometries\": [{ \"type\": \"Point\", \"coordinates\": [0, 0] }, { \"type\": \"LineString\", \"coordinates\": [[0, 0], [1, 0]] }] }, \"properties\": { \"name\": \"null island\" } } FeatureCollection The most common. Object of type FeatureCollection that contains an array of Feature objects. { \"type\":\"FeatureCollection\", \"features\":[{ \"type\":\"Feature\", \"geometry\":{ \"type\":\"Polygon\", \"coordinates\":[[ [-109.59960937500003,47.8476557135582], [-98.43750000000003,46.4414057135582], [-102.744140625,34.4003900885582], [-111.708984375,37.9160150885582], [-109.59960937500003,47.8476557135582] ]] }, \"properties\":null }] } Right Hand Rule Polygons contain coordinates in an order. The exterior ring goes counterclockwise, the interior rings are clockwise. Resources https://macwright.org/2015/03/23/geojson-second-bite","title":"GeoJSON"},{"location":"data/geojson/#geojson","text":"","title":"GeoJSON"},{"location":"data/geojson/#basics","text":"JSON Dimensions: longitude, latitude (x, y) Coordinate: single decimal number representing a single dimension Position: array of coordinates in order [longitude, latitude, elevation]","title":"Basics"},{"location":"data/geojson/#geometry","text":"Geometries are shapes and nothing more.","title":"Geometry"},{"location":"data/geojson/#point","text":"Single position { \"type\": \"Point\", \"coordinates\": [0, 0] }","title":"Point"},{"location":"data/geojson/#linestring","text":"2+ positions { \"type\": \"LineString\", \"coordinates\": [ [0, 0], [10, 10] ] }","title":"LineString"},{"location":"data/geojson/#polygon","text":"Made up of LinearRings, loops of positions. LinearRings Exterior: Every polygon has one, comes first, defines what's filled Interior: Defines what's empty if polygon has a hole { \"type\": \"Polygon\", \"coordinates\": [ [ [0, 0], [10, 10], [10, 0], [0, 0] ] ] }","title":"Polygon"},{"location":"data/geojson/#properties","text":"Can be any kind of JSON object, but usually just single-depth key/value mappings.","title":"Properties"},{"location":"data/geojson/#feature","text":"A feature has geometry and properties. { \"type\": \"Feature\", \"geometry\": { \"type\": \"Point\", \"coordinates\": [0, 0] }, \"properties\": { \"name\": \"null island\" } }","title":"Feature"},{"location":"data/geojson/#multi-geometries","text":"More than one of the same kind of geometry (e.g. United States polygon plus HI polygon and AK polygon).","title":"Multi Geometries"},{"location":"data/geojson/#multipoint","text":"[[0, 0], [1, 1]]","title":"MultiPoint"},{"location":"data/geojson/#multipolygon","text":"","title":"MultiPolygon"},{"location":"data/geojson/#multilinestring","text":"","title":"MultiLineString"},{"location":"data/geojson/#geometrycollection","text":"When you have a bunch of different kinds of geometries that refer to the same thing. Rare. Not recommended. { \"type\": \"Feature\", \"geometry\": { \"type\": \"GeometryCollection\", \"geometries\": [{ \"type\": \"Point\", \"coordinates\": [0, 0] }, { \"type\": \"LineString\", \"coordinates\": [[0, 0], [1, 0]] }] }, \"properties\": { \"name\": \"null island\" } }","title":"GeometryCollection"},{"location":"data/geojson/#featurecollection","text":"The most common. Object of type FeatureCollection that contains an array of Feature objects. { \"type\":\"FeatureCollection\", \"features\":[{ \"type\":\"Feature\", \"geometry\":{ \"type\":\"Polygon\", \"coordinates\":[[ [-109.59960937500003,47.8476557135582], [-98.43750000000003,46.4414057135582], [-102.744140625,34.4003900885582], [-111.708984375,37.9160150885582], [-109.59960937500003,47.8476557135582] ]] }, \"properties\":null }] }","title":"FeatureCollection"},{"location":"data/geojson/#right-hand-rule","text":"Polygons contain coordinates in an order. The exterior ring goes counterclockwise, the interior rings are clockwise.","title":"Right Hand Rule"},{"location":"data/geojson/#resources","text":"https://macwright.org/2015/03/23/geojson-second-bite","title":"Resources"},{"location":"data/json/","text":"JSON XML is generally used to structure data or messages. JSON is used to represent data as key-value pairs, which can be easily converted to and from JavaScript objects. Overview JSON stands for JavaScript Object Notation, but code for reading and generating JSON data can be written in any language. JSON is a format for storing and transporting data. It's often used when data is sent from a server to a web page. The JSON format is syntactically identical to the code for creating JavaScript objects. Because of this similarity, a JavaScript program can easily convert JSON data into native JavaScript objects. JSON Syntax Data is in name/value pairs Data is separated by commas Curly braces hold objects Square brackets hold arrays","title":"JSON"},{"location":"data/json/#json","text":"XML is generally used to structure data or messages. JSON is used to represent data as key-value pairs, which can be easily converted to and from JavaScript objects.","title":"JSON"},{"location":"data/json/#overview","text":"JSON stands for JavaScript Object Notation, but code for reading and generating JSON data can be written in any language. JSON is a format for storing and transporting data. It's often used when data is sent from a server to a web page. The JSON format is syntactically identical to the code for creating JavaScript objects. Because of this similarity, a JavaScript program can easily convert JSON data into native JavaScript objects.","title":"Overview"},{"location":"data/json/#json-syntax","text":"Data is in name/value pairs Data is separated by commas Curly braces hold objects Square brackets hold arrays","title":"JSON Syntax"},{"location":"data/xml/","text":"XML HTML is used to structure the text on web pages to be rendered appropriately in web browsers. XML is generally used to structure data or messages. JSON is used to represent data as key-value pairs, which can be easily converted to and from JavaScript objects. XML: Extensible Markup Language XML data binding The binding of XML documents to a hierarchy of custom and strongly typed objects, in contrast to the generic objects created by a DOM parser. Java Architecture for XML Binding (JAXB) is a data binding system. WSDL is an XML grammar for specifying a public interface for a web service. WSDL is not necessarily tied to a specific XML messaging system, but it does include built-in extensions for describing SOAP services.","title":"XML"},{"location":"data/xml/#xml","text":"HTML is used to structure the text on web pages to be rendered appropriately in web browsers. XML is generally used to structure data or messages. JSON is used to represent data as key-value pairs, which can be easily converted to and from JavaScript objects. XML: Extensible Markup Language XML data binding The binding of XML documents to a hierarchy of custom and strongly typed objects, in contrast to the generic objects created by a DOM parser. Java Architecture for XML Binding (JAXB) is a data binding system. WSDL is an XML grammar for specifying a public interface for a web service. WSDL is not necessarily tied to a specific XML messaging system, but it does include built-in extensions for describing SOAP services.","title":"XML"},{"location":"dev-ops/new-horizons-course/","text":"New Horizons Course: DevOps Continuous Delivery Architect (CDA) About Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute We have access to recordings for 6 mos after course. Once I get my access, copy digital key and go to DevOps Institute link. The course is geared toward the CDA exam . * Web-based proctored exam * Make a new user account * Ask account manager if we have a voucher to take the exam (through the grant) * Need 65% to pass Books: * The DevOps Handbook * Continuous Delivery (Humble and Farley) Contents Day 1 Module 1: Continuous Delivery Concepts Module 2: Collaborative Culture Module 3: Design Practices for CD Module 4: Continuous Integration and Testing Day 2 Module 5: Security Assurance Module 6: Continuous Deployment Module 7: Infrastructure and the DevOps Toolchain Module 8: Continuous Monitoring Measurement and Improvement","title":"New Horizons Course: DevOps Continuous Delivery Architect (CDA)"},{"location":"dev-ops/new-horizons-course/#new-horizons-course-devops-continuous-delivery-architect-cda","text":"","title":"New Horizons Course: DevOps Continuous Delivery Architect (CDA)"},{"location":"dev-ops/new-horizons-course/#about","text":"Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute We have access to recordings for 6 mos after course. Once I get my access, copy digital key and go to DevOps Institute link. The course is geared toward the CDA exam . * Web-based proctored exam * Make a new user account * Ask account manager if we have a voucher to take the exam (through the grant) * Need 65% to pass Books: * The DevOps Handbook * Continuous Delivery (Humble and Farley)","title":"About"},{"location":"dev-ops/new-horizons-course/#contents","text":"","title":"Contents"},{"location":"dev-ops/new-horizons-course/#day-1","text":"Module 1: Continuous Delivery Concepts Module 2: Collaborative Culture Module 3: Design Practices for CD Module 4: Continuous Integration and Testing","title":"Day 1"},{"location":"dev-ops/new-horizons-course/#day-2","text":"Module 5: Security Assurance Module 6: Continuous Deployment Module 7: Infrastructure and the DevOps Toolchain Module 8: Continuous Monitoring Measurement and Improvement","title":"Day 2"},{"location":"dev-ops/new-horizons-course/1-concepts/","text":"Module 1: Continuous Delivery Concepts About DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 Continuous Delivery vs Continuous Deployment Video: Architecting for Continuous Delivery (Jez Humble) * Check into trunk on at least a daily basis * Should not be deploying at night or on weekend * New dev should be able to run one command to get everything they need to get started * How to get rid of monolith app: Strangler Application Can't do dev ops without CI Continuous Delivery: * Integrated infrastructure * Orchestration of the environment * Tasks are automated Lean is inherently in Agile and DevOps * Retrospective is example of a Lean practice","title":"Module 1: Continuous Delivery Concepts"},{"location":"dev-ops/new-horizons-course/1-concepts/#module-1-continuous-delivery-concepts","text":"","title":"Module 1: Continuous Delivery Concepts"},{"location":"dev-ops/new-horizons-course/1-concepts/#about","text":"DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 Continuous Delivery vs Continuous Deployment Video: Architecting for Continuous Delivery (Jez Humble) * Check into trunk on at least a daily basis * Should not be deploying at night or on weekend * New dev should be able to run one command to get everything they need to get started * How to get rid of monolith app: Strangler Application Can't do dev ops without CI Continuous Delivery: * Integrated infrastructure * Orchestration of the environment * Tasks are automated Lean is inherently in Agile and DevOps * Retrospective is example of a Lean practice","title":"About"},{"location":"dev-ops/new-horizons-course/2-culture/","text":"Module 2: Collaborative Culture About DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 Video: Crossing the CI/CD/DevOps Chasm (Miranda LeBlanc) 3 tiers of culture: * Enterprise executive * Cross functional teams * Design microteams Martin Fowler: Need culture to make DevOps work. Some people are adamant that we should not have a DevOps team. * It's a sort of silo. * Example: Bob is the Docker expert. He handles it. This is a type of silo that can occur naturally over time. Want to avoid this. Cultural Requirements 1. Collaboration 2. Affinity 3. Tooling 4. Scale Melvin Conway: Design systems quote Value Stream Map: steps from start to finish * Highlight value-add activities * Identify zero value-add activities * Identify the bottlenecks Lean: learn as we go, give feedback, eliminate waste Agile: fast feedback cycles, involve customer early Site Reliability Engineering (SRE): slightly different, new, Google doing this Quality assurance is important to DevOps. Testing maturity is key indicator of DevOps maturity. A CDA is a culturalist: * Advocate * Coach * Active monitor Embrace the Three Ways: //what?? 1. Flow: left to right 2. Feedback: short feedback loops (Agile), right to left 3. Continuous Experimentation and Learning: - Repetition - Experiment, take risks, and learn from failure Module 3: Design Practices for CD devops.com/design-devops-best-practices Best practices prevent/mitigate developer stress. Video: Continuous Delivery: can deploy to production (business choice) Continuous Deployment: do deploy to production Automate 1. Build 2. Deploy 3. Test Need solid configuration management: database schemas, deployment scripts, smaller changes, lower risk Benefits of CM: less risk (can rapidly roll back) 12-Factor App Design Practices Codebase with version control Dependencies are isolated and declared Configuration is stored in the environment Backing services treated as attached resources Build, release, run stages are separate Processes 6. 7. 8. 9. 10. 11. 12. (Slide 72) and 12factor.net Feature Toggles (Config Flags) Best Practices (As simple as an if statement and a variable.) Everyone commits to mainline every day. Holly and Ryan have experience with toggles. Bad experience b/c toggles were nested. No separate feature branches. Put every feature behind feature toggle Pre-Flight Testing Best Practices - Static analysis - Peer review (Crucible) - Unit tests - Functional tests - Pre-flight tests performed in test environment equivalent to production environment Design Pattern Library Best Practices - Rough out designs - Avoid duplication of effort - Constistent behavior Microservices - A pattern for building loosley coupled distributed autonomous services. - Consumed via API - Independently developed/deployable. Microserves Best Practices - Automate all things - Use VMs/containers - One service per host - Keep environments as close to production as possible Microservices and Containers - Containerization is a lightweight alternative to full machine virtualization. - Fixes the \"Works on my machine\" problem. Module 4: Continuous Integration and Testing Continuous Integration 1. Make a change 1. Test code/run tests - Pass - Fail --> fix code Small changes, quick feedback Highest priority is to fix anything that breaks the app. CI Mainline model with distributed version control system. CI server triggers when change made to master. Test Driven Development - Design teset and develop app to pass the test CDA Test Tip - 2 bad answers and 2 ok answers. - Choose the answer that's most right. Automated Build - CLI script to run build and tests or ... - Collection of build scripts that call one another Containers - Go from nothing to full dev environment in 30 mins - Sandbox Fail fast: run important tests early Automatically revert changes that break CI processes. Fast DB Test: pre-flight and CI functionality testing Rigorous DB Test: used during staging and predeployment Microservices - Apps are composed of multiple autonomous bounded services which communicate through APIs - Each service has its own storage and is supposed to be independent of other services. DevOps Test Assessment - Design - Then assess - Creation - Integration - Building - Binding - Delivery - Deployment Note: Between each stage, perform assessment Test quickly enough to reduce bottlenecks. Recommended integration tests: 1. Connection failures 1. Interactions between services 1. Dependencies between services 1. API contract 1. Aggregate performance Continuous Testing Culture I, T, TT - I-shaped person is too specialized. - T-shaped person is less specialized. - TT-shaped Five Tenets of Continuous Testing 1. Shift left 1. Fail early 1. Fail often 1. Test fast 1. Relevance A/B Test Strategy Blue-Green Test and Deployment Strategy Chaos Monkey Test","title":"Module 2: Collaborative Culture"},{"location":"dev-ops/new-horizons-course/2-culture/#module-2-collaborative-culture","text":"","title":"Module 2: Collaborative Culture"},{"location":"dev-ops/new-horizons-course/2-culture/#about","text":"DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 Video: Crossing the CI/CD/DevOps Chasm (Miranda LeBlanc) 3 tiers of culture: * Enterprise executive * Cross functional teams * Design microteams Martin Fowler: Need culture to make DevOps work. Some people are adamant that we should not have a DevOps team. * It's a sort of silo. * Example: Bob is the Docker expert. He handles it. This is a type of silo that can occur naturally over time. Want to avoid this. Cultural Requirements 1. Collaboration 2. Affinity 3. Tooling 4. Scale Melvin Conway: Design systems quote Value Stream Map: steps from start to finish * Highlight value-add activities * Identify zero value-add activities * Identify the bottlenecks Lean: learn as we go, give feedback, eliminate waste Agile: fast feedback cycles, involve customer early Site Reliability Engineering (SRE): slightly different, new, Google doing this Quality assurance is important to DevOps. Testing maturity is key indicator of DevOps maturity. A CDA is a culturalist: * Advocate * Coach * Active monitor Embrace the Three Ways: //what?? 1. Flow: left to right 2. Feedback: short feedback loops (Agile), right to left 3. Continuous Experimentation and Learning: - Repetition - Experiment, take risks, and learn from failure","title":"About"},{"location":"dev-ops/new-horizons-course/2-culture/#module-3-design-practices-for-cd","text":"devops.com/design-devops-best-practices Best practices prevent/mitigate developer stress. Video: Continuous Delivery: can deploy to production (business choice) Continuous Deployment: do deploy to production Automate 1. Build 2. Deploy 3. Test Need solid configuration management: database schemas, deployment scripts, smaller changes, lower risk Benefits of CM: less risk (can rapidly roll back)","title":"Module 3: Design Practices for CD"},{"location":"dev-ops/new-horizons-course/2-culture/#12-factor-app-design-practices","text":"Codebase with version control Dependencies are isolated and declared Configuration is stored in the environment Backing services treated as attached resources Build, release, run stages are separate Processes 6. 7. 8. 9. 10. 11. 12. (Slide 72) and 12factor.net Feature Toggles (Config Flags) Best Practices (As simple as an if statement and a variable.) Everyone commits to mainline every day. Holly and Ryan have experience with toggles. Bad experience b/c toggles were nested. No separate feature branches. Put every feature behind feature toggle Pre-Flight Testing Best Practices - Static analysis - Peer review (Crucible) - Unit tests - Functional tests - Pre-flight tests performed in test environment equivalent to production environment Design Pattern Library Best Practices - Rough out designs - Avoid duplication of effort - Constistent behavior Microservices - A pattern for building loosley coupled distributed autonomous services. - Consumed via API - Independently developed/deployable. Microserves Best Practices - Automate all things - Use VMs/containers - One service per host - Keep environments as close to production as possible Microservices and Containers - Containerization is a lightweight alternative to full machine virtualization. - Fixes the \"Works on my machine\" problem.","title":"12-Factor App Design Practices"},{"location":"dev-ops/new-horizons-course/2-culture/#module-4-continuous-integration-and-testing","text":"Continuous Integration 1. Make a change 1. Test code/run tests - Pass - Fail --> fix code Small changes, quick feedback Highest priority is to fix anything that breaks the app. CI Mainline model with distributed version control system. CI server triggers when change made to master. Test Driven Development - Design teset and develop app to pass the test CDA Test Tip - 2 bad answers and 2 ok answers. - Choose the answer that's most right. Automated Build - CLI script to run build and tests or ... - Collection of build scripts that call one another Containers - Go from nothing to full dev environment in 30 mins - Sandbox Fail fast: run important tests early Automatically revert changes that break CI processes. Fast DB Test: pre-flight and CI functionality testing Rigorous DB Test: used during staging and predeployment Microservices - Apps are composed of multiple autonomous bounded services which communicate through APIs - Each service has its own storage and is supposed to be independent of other services. DevOps Test Assessment - Design - Then assess - Creation - Integration - Building - Binding - Delivery - Deployment Note: Between each stage, perform assessment Test quickly enough to reduce bottlenecks. Recommended integration tests: 1. Connection failures 1. Interactions between services 1. Dependencies between services 1. API contract 1. Aggregate performance Continuous Testing Culture I, T, TT - I-shaped person is too specialized. - T-shaped person is less specialized. - TT-shaped Five Tenets of Continuous Testing 1. Shift left 1. Fail early 1. Fail often 1. Test fast 1. Relevance A/B Test Strategy Blue-Green Test and Deployment Strategy Chaos Monkey Test","title":"Module 4: Continuous Integration and Testing"},{"location":"dev-ops/new-horizons-course/3-design/","text":"Module 3: Design Practices for CD About DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 devops.com/design-devops-best-practices Best practices prevent/mitigate developer stress. Video: Continuous Delivery: can deploy to production (business choice) Continuous Deployment: do deploy to production Automate 1. Build 2. Deploy 3. Test Need solid configuration management: database schemas, deployment scripts, smaller changes, lower risk Benefits of CM: less risk (can rapidly roll back) 12-Factor App Design Practices Codebase with version control Dependencies are isolated and declared Configuration is stored in the environment Backing services treated as attached resources Build, release, run stages are separate Processes 6. 7. 8. 9. 10. 11. 12. (Slide 72) and 12factor.net Feature Toggles (Config Flags) Best Practices (As simple as an if statement and a variable.) Everyone commits to mainline every day. Holly and Ryan have experience with toggles. Bad experience b/c toggles were nested. No separate feature branches. Put every feature behind feature toggle Pre-Flight Testing Best Practices - Static analysis - Peer review (Crucible) - Unit tests - Functional tests - Pre-flight tests performed in test environment equivalent to production environment Design Pattern Library Best Practices - Rough out designs - Avoid duplication of effort - Constistent behavior Microservices - A pattern for building loosley coupled distributed autonomous services. - Consumed via API - Independently developed/deployable. Microserves Best Practices - Automate all things - Use VMs/containers - One service per host - Keep environments as close to production as possible Microservices and Containers - Containerization is a lightweight alternative to full machine virtualization. - Fixes the \"Works on my machine\" problem. Module 4: Continuous Integration and Testing Continuous Integration 1. Make a change 1. Test code/run tests - Pass - Fail --> fix code Small changes, quick feedback Highest priority is to fix anything that breaks the app. CI Mainline model with distributed version control system. CI server triggers when change made to master. Test Driven Development - Design teset and develop app to pass the test CDA Test Tip - 2 bad answers and 2 ok answers. - Choose the answer that's most right. Automated Build - CLI script to run build and tests or ... - Collection of build scripts that call one another Containers - Go from nothing to full dev environment in 30 mins - Sandbox Fail fast: run important tests early Automatically revert changes that break CI processes. Fast DB Test: pre-flight and CI functionality testing Rigorous DB Test: used during staging and predeployment Microservices - Apps are composed of multiple autonomous bounded services which communicate through APIs - Each service has its own storage and is supposed to be independent of other services. DevOps Test Assessment - Design - Then assess - Creation - Integration - Building - Binding - Delivery - Deployment Note: Between each stage, perform assessment Test quickly enough to reduce bottlenecks. Recommended integration tests: 1. Connection failures 1. Interactions between services 1. Dependencies between services 1. API contract 1. Aggregate performance Continuous Testing Culture I, T, TT - I-shaped person is too specialized. - T-shaped person is less specialized. - TT-shaped Five Tenets of Continuous Testing 1. Shift left 1. Fail early 1. Fail often 1. Test fast 1. Relevance A/B Test Strategy Blue-Green Test and Deployment Strategy Chaos Monkey Test","title":"Module 3: Design Practices for CD"},{"location":"dev-ops/new-horizons-course/3-design/#module-3-design-practices-for-cd","text":"","title":"Module 3: Design Practices for CD"},{"location":"dev-ops/new-horizons-course/3-design/#about","text":"DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 devops.com/design-devops-best-practices Best practices prevent/mitigate developer stress. Video: Continuous Delivery: can deploy to production (business choice) Continuous Deployment: do deploy to production Automate 1. Build 2. Deploy 3. Test Need solid configuration management: database schemas, deployment scripts, smaller changes, lower risk Benefits of CM: less risk (can rapidly roll back)","title":"About"},{"location":"dev-ops/new-horizons-course/3-design/#12-factor-app-design-practices","text":"Codebase with version control Dependencies are isolated and declared Configuration is stored in the environment Backing services treated as attached resources Build, release, run stages are separate Processes 6. 7. 8. 9. 10. 11. 12. (Slide 72) and 12factor.net Feature Toggles (Config Flags) Best Practices (As simple as an if statement and a variable.) Everyone commits to mainline every day. Holly and Ryan have experience with toggles. Bad experience b/c toggles were nested. No separate feature branches. Put every feature behind feature toggle Pre-Flight Testing Best Practices - Static analysis - Peer review (Crucible) - Unit tests - Functional tests - Pre-flight tests performed in test environment equivalent to production environment Design Pattern Library Best Practices - Rough out designs - Avoid duplication of effort - Constistent behavior Microservices - A pattern for building loosley coupled distributed autonomous services. - Consumed via API - Independently developed/deployable. Microserves Best Practices - Automate all things - Use VMs/containers - One service per host - Keep environments as close to production as possible Microservices and Containers - Containerization is a lightweight alternative to full machine virtualization. - Fixes the \"Works on my machine\" problem.","title":"12-Factor App Design Practices"},{"location":"dev-ops/new-horizons-course/3-design/#module-4-continuous-integration-and-testing","text":"Continuous Integration 1. Make a change 1. Test code/run tests - Pass - Fail --> fix code Small changes, quick feedback Highest priority is to fix anything that breaks the app. CI Mainline model with distributed version control system. CI server triggers when change made to master. Test Driven Development - Design teset and develop app to pass the test CDA Test Tip - 2 bad answers and 2 ok answers. - Choose the answer that's most right. Automated Build - CLI script to run build and tests or ... - Collection of build scripts that call one another Containers - Go from nothing to full dev environment in 30 mins - Sandbox Fail fast: run important tests early Automatically revert changes that break CI processes. Fast DB Test: pre-flight and CI functionality testing Rigorous DB Test: used during staging and predeployment Microservices - Apps are composed of multiple autonomous bounded services which communicate through APIs - Each service has its own storage and is supposed to be independent of other services. DevOps Test Assessment - Design - Then assess - Creation - Integration - Building - Binding - Delivery - Deployment Note: Between each stage, perform assessment Test quickly enough to reduce bottlenecks. Recommended integration tests: 1. Connection failures 1. Interactions between services 1. Dependencies between services 1. API contract 1. Aggregate performance Continuous Testing Culture I, T, TT - I-shaped person is too specialized. - T-shaped person is less specialized. - TT-shaped Five Tenets of Continuous Testing 1. Shift left 1. Fail early 1. Fail often 1. Test fast 1. Relevance A/B Test Strategy Blue-Green Test and Deployment Strategy Chaos Monkey Test","title":"Module 4: Continuous Integration and Testing"},{"location":"dev-ops/new-horizons-course/4-ci-testing/","text":"Module 4: Continuous Integration and Testing About DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 Continuous Integration 1. Make a change 1. Test code/run tests - Pass - Fail --> fix code Small changes, quick feedback Highest priority is to fix anything that breaks the app. CI Mainline model with distributed version control system. CI server triggers when change made to master. Test Driven Development - Design teset and develop app to pass the test CDA Test Tip - 2 bad answers and 2 ok answers. - Choose the answer that's most right. Automated Build - CLI script to run build and tests or ... - Collection of build scripts that call one another Containers - Go from nothing to full dev environment in 30 mins - Sandbox Fail fast: run important tests early Automatically revert changes that break CI processes. Fast DB Test: pre-flight and CI functionality testing Rigorous DB Test: used during staging and predeployment Microservices - Apps are composed of multiple autonomous bounded services which communicate through APIs - Each service has its own storage and is supposed to be independent of other services. DevOps Test Assessment - Design - Then assess - Creation - Integration - Building - Binding - Delivery - Deployment Note: Between each stage, perform assessment Test quickly enough to reduce bottlenecks. Recommended integration tests: 1. Connection failures 1. Interactions between services 1. Dependencies between services 1. API contract 1. Aggregate performance Continuous Testing Culture I, T, TT - I-shaped person is too specialized. - T-shaped person is less specialized. - TT-shaped Five Tenets of Continuous Testing 1. Shift left 1. Fail early 1. Fail often 1. Test fast 1. Relevance A/B Test Strategy Blue-Green Test and Deployment Strategy Chaos Monkey Test","title":"Module 4: Continuous Integration and Testing"},{"location":"dev-ops/new-horizons-course/4-ci-testing/#module-4-continuous-integration-and-testing","text":"","title":"Module 4: Continuous Integration and Testing"},{"location":"dev-ops/new-horizons-course/4-ci-testing/#about","text":"DevOps Continuous Delivery Architect Date: April 27, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 1 Continuous Integration 1. Make a change 1. Test code/run tests - Pass - Fail --> fix code Small changes, quick feedback Highest priority is to fix anything that breaks the app. CI Mainline model with distributed version control system. CI server triggers when change made to master. Test Driven Development - Design teset and develop app to pass the test CDA Test Tip - 2 bad answers and 2 ok answers. - Choose the answer that's most right. Automated Build - CLI script to run build and tests or ... - Collection of build scripts that call one another Containers - Go from nothing to full dev environment in 30 mins - Sandbox Fail fast: run important tests early Automatically revert changes that break CI processes. Fast DB Test: pre-flight and CI functionality testing Rigorous DB Test: used during staging and predeployment Microservices - Apps are composed of multiple autonomous bounded services which communicate through APIs - Each service has its own storage and is supposed to be independent of other services. DevOps Test Assessment - Design - Then assess - Creation - Integration - Building - Binding - Delivery - Deployment Note: Between each stage, perform assessment Test quickly enough to reduce bottlenecks. Recommended integration tests: 1. Connection failures 1. Interactions between services 1. Dependencies between services 1. API contract 1. Aggregate performance Continuous Testing Culture I, T, TT - I-shaped person is too specialized. - T-shaped person is less specialized. - TT-shaped Five Tenets of Continuous Testing 1. Shift left 1. Fail early 1. Fail often 1. Test fast 1. Relevance A/B Test Strategy Blue-Green Test and Deployment Strategy Chaos Monkey Test","title":"About"},{"location":"dev-ops/new-horizons-course/5-security/","text":"Module 5: Security Assurance About DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 Video: Sam Guckenheimer - Static analysis security testing reviews your code - VS Code - Veracode tool (summary of vulnerabilities) - Checkmarx - HPE Security Fortify - Scan open source - VS Code - VS Code WhiteSource DevSecOps is \"Security as code\" culture. (i.e. Security is everyone's responsibility.) CI/CD pipeline is opportunity to do security testing. Publication: How to Seamlessly Integrate Security into DevOps, Gartner Report, 30 Sept 2016 www.owasp.org Whitelist: if you're on the list, you can come in Container Security Best - Enforce network segmentation - Use hypervisors - Use images signing for chain of custody Red Team vs Blue Team - Red Team drives attacks - Blue Team defends; uses threat intelligence Cybercrime costs businesses $1.1 T annually. Module 6: Continuous Deployment Tests to validate: 1. Deploy and config environment 1. Environment smoke test 1. Deploy and config app 1. Deployment test Mean Time Restore Service (MTRS): From failure until fully restored service and functionality. This is more important with CD. Mean Time Between Failure (MTBF): From CI working until failure Mean Time to Detect (MTTD): Time to detect failure when failure occurs Mean Time to Repair (MTTR): Average time to fix; doesn't include restore/recovery Blue Green Deployment - Blue is active - Green is passive Dark launching uses a combo of: - Feature toggles - A/B testing - Canary deployments Module 7: Infrastructure and the DevOps Toolchain DevOps Toolchain Categories of tools: 1. Code 1. Build 1. Test 1. Package 1. Release 1. Configure 1. Monitor Build your pipeline toolchain gradually. RESTful API - Services as a network. - Access and manipulate textual representatives (XML, HTML, JSON). Source Code Management Configuration management Artifact repository: stores binary outcomes of the build process (e.g. Artifactory) Immutable infrastructure Deployment using containers Auto scaling Multicloud pipeline Module 8: Continuous Monitoring Measurement and Improvement Visual Studio (VS TS) Remote Continuous monitoring strategy Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Module 5: Security Assurance"},{"location":"dev-ops/new-horizons-course/5-security/#module-5-security-assurance","text":"","title":"Module 5: Security Assurance"},{"location":"dev-ops/new-horizons-course/5-security/#about","text":"DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 Video: Sam Guckenheimer - Static analysis security testing reviews your code - VS Code - Veracode tool (summary of vulnerabilities) - Checkmarx - HPE Security Fortify - Scan open source - VS Code - VS Code WhiteSource DevSecOps is \"Security as code\" culture. (i.e. Security is everyone's responsibility.) CI/CD pipeline is opportunity to do security testing. Publication: How to Seamlessly Integrate Security into DevOps, Gartner Report, 30 Sept 2016 www.owasp.org Whitelist: if you're on the list, you can come in Container Security Best - Enforce network segmentation - Use hypervisors - Use images signing for chain of custody Red Team vs Blue Team - Red Team drives attacks - Blue Team defends; uses threat intelligence Cybercrime costs businesses $1.1 T annually.","title":"About"},{"location":"dev-ops/new-horizons-course/5-security/#module-6-continuous-deployment","text":"Tests to validate: 1. Deploy and config environment 1. Environment smoke test 1. Deploy and config app 1. Deployment test Mean Time Restore Service (MTRS): From failure until fully restored service and functionality. This is more important with CD. Mean Time Between Failure (MTBF): From CI working until failure Mean Time to Detect (MTTD): Time to detect failure when failure occurs Mean Time to Repair (MTTR): Average time to fix; doesn't include restore/recovery Blue Green Deployment - Blue is active - Green is passive Dark launching uses a combo of: - Feature toggles - A/B testing - Canary deployments","title":"Module 6: Continuous Deployment"},{"location":"dev-ops/new-horizons-course/5-security/#module-7-infrastructure-and-the-devops-toolchain","text":"DevOps Toolchain Categories of tools: 1. Code 1. Build 1. Test 1. Package 1. Release 1. Configure 1. Monitor Build your pipeline toolchain gradually. RESTful API - Services as a network. - Access and manipulate textual representatives (XML, HTML, JSON). Source Code Management Configuration management Artifact repository: stores binary outcomes of the build process (e.g. Artifactory) Immutable infrastructure Deployment using containers Auto scaling Multicloud pipeline","title":"Module 7: Infrastructure and the DevOps Toolchain"},{"location":"dev-ops/new-horizons-course/5-security/#module-8-continuous-monitoring-measurement-and-improvement","text":"Visual Studio (VS TS) Remote","title":"Module 8: Continuous Monitoring Measurement and Improvement"},{"location":"dev-ops/new-horizons-course/5-security/#continuous-monitoring-strategy","text":"Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Continuous monitoring strategy"},{"location":"dev-ops/new-horizons-course/6-cd/","text":"Module 6: Continuous Deployment About DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 Tests to validate: 1. Deploy and config environment 1. Environment smoke test 1. Deploy and config app 1. Deployment test Mean Time Restore Service (MTRS): From failure until fully restored service and functionality. This is more important with CD. Mean Time Between Failure (MTBF): From CI working until failure Mean Time to Detect (MTTD): Time to detect failure when failure occurs Mean Time to Repair (MTTR): Average time to fix; doesn't include restore/recovery Blue Green Deployment - Blue is active - Green is passive Dark launching uses a combo of: - Feature toggles - A/B testing - Canary deployments Module 7: Infrastructure and the DevOps Toolchain DevOps Toolchain Categories of tools: 1. Code 1. Build 1. Test 1. Package 1. Release 1. Configure 1. Monitor Build your pipeline toolchain gradually. RESTful API - Services as a network. - Access and manipulate textual representatives (XML, HTML, JSON). Source Code Management Configuration management Artifact repository: stores binary outcomes of the build process (e.g. Artifactory) Immutable infrastructure Deployment using containers Auto scaling Multicloud pipeline Module 8: Continuous Monitoring Measurement and Improvement Visual Studio (VS TS) Remote Continuous monitoring strategy Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Module 6: Continuous Deployment"},{"location":"dev-ops/new-horizons-course/6-cd/#module-6-continuous-deployment","text":"","title":"Module 6: Continuous Deployment"},{"location":"dev-ops/new-horizons-course/6-cd/#about","text":"DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 Tests to validate: 1. Deploy and config environment 1. Environment smoke test 1. Deploy and config app 1. Deployment test Mean Time Restore Service (MTRS): From failure until fully restored service and functionality. This is more important with CD. Mean Time Between Failure (MTBF): From CI working until failure Mean Time to Detect (MTTD): Time to detect failure when failure occurs Mean Time to Repair (MTTR): Average time to fix; doesn't include restore/recovery Blue Green Deployment - Blue is active - Green is passive Dark launching uses a combo of: - Feature toggles - A/B testing - Canary deployments","title":"About"},{"location":"dev-ops/new-horizons-course/6-cd/#module-7-infrastructure-and-the-devops-toolchain","text":"DevOps Toolchain Categories of tools: 1. Code 1. Build 1. Test 1. Package 1. Release 1. Configure 1. Monitor Build your pipeline toolchain gradually. RESTful API - Services as a network. - Access and manipulate textual representatives (XML, HTML, JSON). Source Code Management Configuration management Artifact repository: stores binary outcomes of the build process (e.g. Artifactory) Immutable infrastructure Deployment using containers Auto scaling Multicloud pipeline","title":"Module 7: Infrastructure and the DevOps Toolchain"},{"location":"dev-ops/new-horizons-course/6-cd/#module-8-continuous-monitoring-measurement-and-improvement","text":"Visual Studio (VS TS) Remote","title":"Module 8: Continuous Monitoring Measurement and Improvement"},{"location":"dev-ops/new-horizons-course/6-cd/#continuous-monitoring-strategy","text":"Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Continuous monitoring strategy"},{"location":"dev-ops/new-horizons-course/7-toolchain/","text":"Module 7: Infrastructure and the DevOps Toolchain About DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 DevOps Toolchain Categories of tools: 1. Code 1. Build 1. Test 1. Package 1. Release 1. Configure 1. Monitor Build your pipeline toolchain gradually. RESTful API - Services as a network. - Access and manipulate textual representatives (XML, HTML, JSON). Source Code Management Configuration management Artifact repository: stores binary outcomes of the build process (e.g. Artifactory) Immutable infrastructure Deployment using containers Auto scaling Multicloud pipeline Module 8: Continuous Monitoring Measurement and Improvement Visual Studio (VS TS) Remote Continuous monitoring strategy Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Module 7: Infrastructure and the DevOps Toolchain"},{"location":"dev-ops/new-horizons-course/7-toolchain/#module-7-infrastructure-and-the-devops-toolchain","text":"","title":"Module 7: Infrastructure and the DevOps Toolchain"},{"location":"dev-ops/new-horizons-course/7-toolchain/#about","text":"DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 DevOps Toolchain Categories of tools: 1. Code 1. Build 1. Test 1. Package 1. Release 1. Configure 1. Monitor Build your pipeline toolchain gradually. RESTful API - Services as a network. - Access and manipulate textual representatives (XML, HTML, JSON). Source Code Management Configuration management Artifact repository: stores binary outcomes of the build process (e.g. Artifactory) Immutable infrastructure Deployment using containers Auto scaling Multicloud pipeline","title":"About"},{"location":"dev-ops/new-horizons-course/7-toolchain/#module-8-continuous-monitoring-measurement-and-improvement","text":"Visual Studio (VS TS) Remote","title":"Module 8: Continuous Monitoring Measurement and Improvement"},{"location":"dev-ops/new-horizons-course/7-toolchain/#continuous-monitoring-strategy","text":"Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Continuous monitoring strategy"},{"location":"dev-ops/new-horizons-course/8-monitoring/","text":"Module 8: Continuous Monitoring Measurement and Improvement About DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 Visual Studio (VS TS) Remote Continuous monitoring strategy Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Module 8: Continuous Monitoring Measurement and Improvement"},{"location":"dev-ops/new-horizons-course/8-monitoring/#module-8-continuous-monitoring-measurement-and-improvement","text":"","title":"Module 8: Continuous Monitoring Measurement and Improvement"},{"location":"dev-ops/new-horizons-course/8-monitoring/#about","text":"DevOps Continuous Delivery Architect Date: April 28, 2020 Instructor: Pete O'Donnell New Horizons course Materials provided by DevOps Institute Day 2 Visual Studio (VS TS) Remote","title":"About"},{"location":"dev-ops/new-horizons-course/8-monitoring/#continuous-monitoring-strategy","text":"Dashboard items to display: 1. Current values 1. Trend graphs 1. Queue lengths 1. Priority 1. Owners Tip: Minimize alerts -- too many and people stop reading them.","title":"Continuous monitoring strategy"},{"location":"java/","text":"java-notes","title":"java-notes"},{"location":"java/#java-notes","text":"","title":"java-notes"},{"location":"java/how-to-deploy-war/","text":"7442 Deploy War SOP In IDE: Merge Charles's \"demo-merge\" branch into mine. Setup web.xml and make sure static resources (JavaScript, HTML/Velocity, CSS) are packages in the war. In the command prompt, run Gradle war command. In the build/lib folder of RMS, you should have an RMS.war file. Log into VM with Tomcat setup to deploy the war: * Remote desktop connection * vmsvwud003.margeo.nrlssc.navy.mil * Use regular domain account info to login In VM: 1. Copy war file over to VM and paste into C:\\tomcat9\\webapps\\ 2. Run the following: - cd \\tomcat9\\bin - startup.bat //to start - shutdown.bat //to stop","title":"7442 Deploy War SOP"},{"location":"java/how-to-deploy-war/#7442-deploy-war-sop","text":"In IDE: Merge Charles's \"demo-merge\" branch into mine. Setup web.xml and make sure static resources (JavaScript, HTML/Velocity, CSS) are packages in the war. In the command prompt, run Gradle war command. In the build/lib folder of RMS, you should have an RMS.war file. Log into VM with Tomcat setup to deploy the war: * Remote desktop connection * vmsvwud003.margeo.nrlssc.navy.mil * Use regular domain account info to login In VM: 1. Copy war file over to VM and paste into C:\\tomcat9\\webapps\\ 2. Run the following: - cd \\tomcat9\\bin - startup.bat //to start - shutdown.bat //to stop","title":"7442 Deploy War SOP"},{"location":"java/intellij/","text":"IntelliJ New Project To download all from mingus for use at home/remotely: $ ivy clone _ _ ____ Boilerplate: * build.xml * ivy.xml N: drive (NSAM) src is the source root. test is the test root. You can set these roots in File > Project > ... > Modules. 7441 Directory Setup .idea/ src/ mil.navy.nrlssc.miw/ Lala.java Lalu.java test/ mil.navy.nrlssc.miw/ junit/ jetty/ data/ General Directory Setup .idea/ src/ main/ java/ com.simple.proj/ SimpleClass.java resources/ test/ java/ com.simple.proj/ SimpleClassTest.java resources/ Hacks Settings>Editor>General>Other Checkbox for \"Show quick documentation on mouse move\" I really like the testing features ... Go to test, create test for ..., little play buttons beside each test etc. IntelliJ Use Windows PowerShell in IntelliJ https://georgik.rocks/how-to-use-powershell-in-intellij-idea-terminal/ - Use commands like \"ls\" - Font colors","title":"IntelliJ"},{"location":"java/intellij/#intellij","text":"","title":"IntelliJ"},{"location":"java/intellij/#new-project","text":"To download all from mingus for use at home/remotely: $ ivy clone _ _ ____ Boilerplate: * build.xml * ivy.xml N: drive (NSAM) src is the source root. test is the test root. You can set these roots in File > Project > ... > Modules. 7441 Directory Setup .idea/ src/ mil.navy.nrlssc.miw/ Lala.java Lalu.java test/ mil.navy.nrlssc.miw/ junit/ jetty/ data/ General Directory Setup .idea/ src/ main/ java/ com.simple.proj/ SimpleClass.java resources/ test/ java/ com.simple.proj/ SimpleClassTest.java resources/","title":"New Project"},{"location":"java/intellij/#hacks","text":"Settings>Editor>General>Other Checkbox for \"Show quick documentation on mouse move\" I really like the testing features ... Go to test, create test for ..., little play buttons beside each test etc. IntelliJ Use Windows PowerShell in IntelliJ https://georgik.rocks/how-to-use-powershell-in-intellij-idea-terminal/ - Use commands like \"ls\" - Font colors","title":"Hacks"},{"location":"java/java/","text":"Java EE Java Enterprise Edition (Java EE) is a specification defining a collection of Java-based server/client technologies and how they interoperate. It has APIs: - JavaServer Faces (JSF) is a Java specification for building component-based user interfaces for web applications[1] and was formalized as a standard through the Java Community Process being part of the Java Platform, Enterprise Edition. It is also a MVC web framework that simplifies construction of user interfaces (UI) for server-based applications by using reusable UI components in a page. JSF 2 uses Facelets as its default templating system. Other view technologies such as XUL or plain Java[3] can also be employed. In contrast, JSF 1.x uses JavaServer Pages (JSP) as its default templating system. - Servlets - jpa - cdi - ejb Java Resources JavaRanch Java Servlet A servlet is simply a class which responds to a particular type of network request. Java servlets typically run on the HTTP protocol. HTTP is an asymmetrical request-response protocol. The client sends a request message to the server, and the server returns a response message as illustrated. Basically servlets are usually used to implement web applications - but there are also various frameworks which operate on top of servlets (e.g. Struts) to give a higher-level abstraction than the \"here's an HTTP request, write to this HTTP response\" level which servlets provide. Applet vs Servlet An Applet is a client side java program that runs within a Web browser on the client machine. On the other hand, a servlet is a server side component that runs on the web Page on server. An applet can use the user interface classes, while a servlet does not have a user interface. Servlet Container Servlets run in a servlet container which handles the networking side (e.g. parsing an HTTP request, connection handling etc). In Java Land servlet containers like Tomcat (open source) and Jetty serve your web applications. Non-Java approaches like Node.js and Go have built-in servers. Resources https://www.javatpoint.com/steps-to-create-a-servlet-using-tomcat-server ntu.edu.sg","title":"Java"},{"location":"java/java/#java-resources","text":"JavaRanch Java Servlet A servlet is simply a class which responds to a particular type of network request. Java servlets typically run on the HTTP protocol. HTTP is an asymmetrical request-response protocol. The client sends a request message to the server, and the server returns a response message as illustrated. Basically servlets are usually used to implement web applications - but there are also various frameworks which operate on top of servlets (e.g. Struts) to give a higher-level abstraction than the \"here's an HTTP request, write to this HTTP response\" level which servlets provide.","title":"Java Resources"},{"location":"java/java/#applet-vs-servlet","text":"An Applet is a client side java program that runs within a Web browser on the client machine. On the other hand, a servlet is a server side component that runs on the web Page on server. An applet can use the user interface classes, while a servlet does not have a user interface.","title":"Applet vs Servlet"},{"location":"java/java/#servlet-container","text":"Servlets run in a servlet container which handles the networking side (e.g. parsing an HTTP request, connection handling etc). In Java Land servlet containers like Tomcat (open source) and Jetty serve your web applications. Non-Java approaches like Node.js and Go have built-in servers.","title":"Servlet Container"},{"location":"java/java/#resources","text":"https://www.javatpoint.com/steps-to-create-a-servlet-using-tomcat-server ntu.edu.sg","title":"Resources"},{"location":"java/javafx/","text":"JavaFX Basics JavaFX is a GUI toolkit for Java. The main launch class for a JavaFX application must extend the javafx.application.Application class. The start() method is the main entry point for all JavaFX applications. A JavaFX application defines the user interface container by means of a stage and a scene. The JavaFX Stage class is the top-level JavaFX container. The JavaFX Scene class is the container for all content. (e.g. When a game needs to change from one screen to the next, it simply attaches the corresponding scene to the Stage object of the JavaFX application.) All components to be displayed inside a JavaFX application must be located inside a scene. In our main() method's entry point, we launch the JavaFX application by simply passing in the command-line arguments to the Application.launch() method. After the Application.launch() method has executed, the application will enter a ready state and the framework internals will invoke the start() method to begin. At this point, the program execution occurs on the JavaFX application thread and not on the main thread. When the start() method is invoked, a JavaFX javafx.stage.Stage object is available for you to use and manipulate. Layout BorderPane: Traditional frame-style layout with top, bottom, left, right, and center nodes. HBox: Arrange a series of nodes in a single row. VBox: Like HBox except nodes in column. StackPane: Use to layer things on top of other panes. GridPane: Flexible grid layout (rows/columns). FlowPane: Nodes appear consecutively and wrap either in columns or rows. TilePane: Nodes appear consecutively and wrap but within a grid format with same-sized cells. AnchorPane: Like BorderPane but responsive. You can anchor nodes to top, bottom, left, right and center (of pane). If window is resized, the nodes maintain position per their anchor points. Resources: JavaFX Tutorial Oracle Layout docs","title":"JavaFX"},{"location":"java/javafx/#javafx","text":"","title":"JavaFX"},{"location":"java/javafx/#basics","text":"JavaFX is a GUI toolkit for Java. The main launch class for a JavaFX application must extend the javafx.application.Application class. The start() method is the main entry point for all JavaFX applications. A JavaFX application defines the user interface container by means of a stage and a scene. The JavaFX Stage class is the top-level JavaFX container. The JavaFX Scene class is the container for all content. (e.g. When a game needs to change from one screen to the next, it simply attaches the corresponding scene to the Stage object of the JavaFX application.) All components to be displayed inside a JavaFX application must be located inside a scene. In our main() method's entry point, we launch the JavaFX application by simply passing in the command-line arguments to the Application.launch() method. After the Application.launch() method has executed, the application will enter a ready state and the framework internals will invoke the start() method to begin. At this point, the program execution occurs on the JavaFX application thread and not on the main thread. When the start() method is invoked, a JavaFX javafx.stage.Stage object is available for you to use and manipulate.","title":"Basics"},{"location":"java/javafx/#layout","text":"BorderPane: Traditional frame-style layout with top, bottom, left, right, and center nodes. HBox: Arrange a series of nodes in a single row. VBox: Like HBox except nodes in column. StackPane: Use to layer things on top of other panes. GridPane: Flexible grid layout (rows/columns). FlowPane: Nodes appear consecutively and wrap either in columns or rows. TilePane: Nodes appear consecutively and wrap but within a grid format with same-sized cells. AnchorPane: Like BorderPane but responsive. You can anchor nodes to top, bottom, left, right and center (of pane). If window is resized, the nodes maintain position per their anchor points.","title":"Layout"},{"location":"java/javafx/#resources","text":"JavaFX Tutorial Oracle Layout docs","title":"Resources:"},{"location":"java/jaxb/","text":"JAXB javax.xml.bind.JAXB \"Java Architecture for XML Binding\" Use JAXB to access an xml document: 1. Bind the schema 2. Unmarshall 3. Validate the source JAXB Binding https://www.3pillarglobal.com/insights/jaxb-binding-process-explained https://javaee.github.io/jaxb-v2/doc/user-guide/ch01.html XJC is the JAXB binding compiler (schema to Java compiler). To generate classes all you need is the xsd. $ xjc example.xsd Given an xml file and an xsd file, generate interfaces/classes by running binding compiler (xjc). Start: books.xml books.xsd $ xjc.sh -p test.jaxb books.xsd -d work Result: work/test.jaxb/ interfaces*.java impl/ This line goes in build.xml: Unmarshall JAXBContext jc = ....(\"test.jaxb\"); Validate Nick Notes https://stackoverflow.com/questions/11463231/how-to-generate-jaxb-classes-from-xsd This is a very confusing stack overflow article, but it goes into great detail there is also a much more concise answer that explains how to generate jaxb classes from eclipse further down https://www.jetbrains.com/help/idea/generating-java-code-from-xml-schema.html that is for intellij this is for eclipse http://help.eclipse.org/mars/index.jsp?topic=%2Forg.eclipse.jpt.doc.user%2Ftask_generate_classes_from_schema.htm XSD XML schema definition Used for validation a.k.a. \"data model\"","title":"Jaxb"},{"location":"java/jaxb/#xsd","text":"XML schema definition Used for validation a.k.a. \"data model\"","title":"XSD"},{"location":"java/lucene/","text":"LUCENE http://web.cs.ucla.edu/classes/winter15/cs144/projects/lucene/index.html https://www.theserverside.com/news/1365139/I-Love-Lucene http://lucene.apache.org/core/4_0_0/demo/overview-summary.html You pump your data into the Index, then do searches on the Index to get results out. Document objects are stored in the Index, and it is your job to \"convert\" your data into Document objects and store them to the Index. That is, you read in each data file (or Web document, database tuple or whatever), instantiate a Document for it, break down the data into chunks and store the chunks in the Document as Field objects (a name/value pair). When you're done building a Document, you write it to the Index using the IndexWriter. Steps Install Lucene. Create an analyzer. Create fields. Create and write documents to an index. Obtain an IndexSearcher. Create queries with QueryParser. Lucene only accepts plain text. Whatever your data type might be -- be it XML, HTML, or PDF, you need to parse these documents into text before tossing them over to Lucene. org.apache.lucene.index Provides IndexWriter, which creates and adds documents to indices. Provides IndexReader, which accesses the data in the index. org.apache.lucene.document Provides a simple Document class. A Document is simply a set of named Fields, whose values may be strings or instances of Reader. org.apache.lucene.search Provides data structures to represent queries: TermQuery for individual words PhraseQuery for phrases BooleanQuery for boolean combinations of queries Provides IndexSearcher which turns queries into TopDocs. QueryParsers are provided for producing query structures from strings or xml.","title":"LUCENE"},{"location":"java/lucene/#lucene","text":"http://web.cs.ucla.edu/classes/winter15/cs144/projects/lucene/index.html https://www.theserverside.com/news/1365139/I-Love-Lucene http://lucene.apache.org/core/4_0_0/demo/overview-summary.html You pump your data into the Index, then do searches on the Index to get results out. Document objects are stored in the Index, and it is your job to \"convert\" your data into Document objects and store them to the Index. That is, you read in each data file (or Web document, database tuple or whatever), instantiate a Document for it, break down the data into chunks and store the chunks in the Document as Field objects (a name/value pair). When you're done building a Document, you write it to the Index using the IndexWriter.","title":"LUCENE"},{"location":"java/lucene/#steps","text":"Install Lucene. Create an analyzer. Create fields. Create and write documents to an index. Obtain an IndexSearcher. Create queries with QueryParser. Lucene only accepts plain text. Whatever your data type might be -- be it XML, HTML, or PDF, you need to parse these documents into text before tossing them over to Lucene.","title":"Steps"},{"location":"java/lucene/#orgapacheluceneindex","text":"Provides IndexWriter, which creates and adds documents to indices. Provides IndexReader, which accesses the data in the index.","title":"org.apache.lucene.index"},{"location":"java/lucene/#orgapachelucenedocument","text":"Provides a simple Document class. A Document is simply a set of named Fields, whose values may be strings or instances of Reader.","title":"org.apache.lucene.document"},{"location":"java/lucene/#orgapachelucenesearch","text":"Provides data structures to represent queries: TermQuery for individual words PhraseQuery for phrases BooleanQuery for boolean combinations of queries Provides IndexSearcher which turns queries into TopDocs. QueryParsers are provided for producing query structures from strings or xml.","title":"org.apache.lucene.search"},{"location":"java/make-a-servlet/","text":"Make a Servlet src/servlets/NewServlet.java src/Server.java handler/NewServlet templates/new.html css .class-example { // class selector \u2026 // can be used to ID 1+ elements } #id-example { // id selector \u2026 // used to ID 1 element } Form is the easiest way to do POST and GET. Need a log properties file. - slf4j (simple Logging Facade 4 Java) - Allows you to plug in a specific logging framework (e.g. logback, log4j) at runtime. Java EE is platform built on top of Java SE. For network apps. Java Servlets Java classes dynamic process requests (for HTML pages) construct responses (for HTML pages)","title":"Make a Servlet"},{"location":"java/make-a-servlet/#make-a-servlet","text":"src/servlets/NewServlet.java src/Server.java handler/NewServlet templates/new.html css .class-example { // class selector \u2026 // can be used to ID 1+ elements } #id-example { // id selector \u2026 // used to ID 1 element } Form is the easiest way to do POST and GET. Need a log properties file. - slf4j (simple Logging Facade 4 Java) - Allows you to plug in a specific logging framework (e.g. logback, log4j) at runtime. Java EE is platform built on top of Java SE. For network apps. Java Servlets Java classes dynamic process requests (for HTML pages) construct responses (for HTML pages)","title":"Make a Servlet"},{"location":"java/tomcat/","text":"Tomcat Getting started: tomcat/webapps/ .war $ cd path/to/tomcat $ startup.bat localhost:8081/project $ shutdown.bat Tomcat in Eclipse: wtpwebapps/ <-- Eclipse webapps/ <-- Manually add .war Server instance running in Eclipse is \"dev\" mode. No war necessary. Resources https://stackoverflow.com/questions/51434930/how-to-hot-reload-tomcat-server-in-vscode","title":"Tomcat"},{"location":"java/tomcat/#resources","text":"https://stackoverflow.com/questions/51434930/how-to-hot-reload-tomcat-server-in-vscode","title":"Resources"},{"location":"java/velocity/","text":"Velocity Render a message In the Java if(req.getAttribute(\"message\")!=null){ context.put(\"message\", req.getAttribute(\"message\")); } public void doPost() { ... req.setAttribute(\"message\", \"User has already registered.\"); } In html #if($message) <h4 class=\"error-message text-center\">$message</h4> #end Resources Apache Velocity","title":"Velocity"},{"location":"java/velocity/#velocity","text":"","title":"Velocity"},{"location":"java/velocity/#render-a-message","text":"In the Java if(req.getAttribute(\"message\")!=null){ context.put(\"message\", req.getAttribute(\"message\")); } public void doPost() { ... req.setAttribute(\"message\", \"User has already registered.\"); } In html #if($message) <h4 class=\"error-message text-center\">$message</h4> #end","title":"Render a message"},{"location":"java/velocity/#resources","text":"Apache Velocity","title":"Resources"},{"location":"java/xjc/","text":"XJC Example C:\\Users\\sclark\\Documents\\7441-workspace\\NSAM\\contacts-common\\build.xml C:\\Users\\sclark\\Documents\\7441-workspace\\NSAM\\contacts-common\\modules\\contactxml\\build.xml","title":"Xjc"},{"location":"js/","text":"js-notes","title":"js-notes"},{"location":"js/#js-notes","text":"","title":"js-notes"},{"location":"js/ajax/","text":"Ajax Asynchronous Javascript & XML XMLHttpRequest object in JavaScript used to execute Ajax to load content onto screen without refreshing the page. JSON can replace XML in some Ajax apps. JSON object { string: value, string: value } new Gson(); // ?? Gson is Java library that can be used to convert Java objects into their JSON representation. jQuery is API written in JS to deal with DOM. Ruby on Rails great for quick, easy site with database but doesn\u2019t scale well. What is HTTPServletRequest request. String Agency = request.getParameter(s: \u201cAgency\u201d); Fix doPost() with TestUserDB. How to post changes to database objects made from JSON/Gson objects? public static Map userlist = null; private static Map reqlist = null; // also stores requests Countries.json // example of GeoJSON file To render something: <div id = \u201cmap-container\u201d></div> RMS","title":"Ajax"},{"location":"js/flux/","text":"Flux Flux applications have three major parts: the dispatcher, the stores, and the views (React components). Resources Flux in-depth overview","title":"Flux"},{"location":"js/flux/#flux","text":"Flux applications have three major parts: the dispatcher, the stores, and the views (React components).","title":"Flux"},{"location":"js/flux/#resources","text":"Flux in-depth overview","title":"Resources"},{"location":"js/gatsby/","text":"Gatsby Getting Started Make sure you have Node and npm: node -v npm -v Run the following: gatsby build gatsby deploy https://www.gatsbyjs.org/blog/2018-04-10-how-to-handle-comments-in-gatsby-blogs/","title":"Gatsby"},{"location":"js/gatsby/#gatsby","text":"","title":"Gatsby"},{"location":"js/gatsby/#getting-started","text":"Make sure you have Node and npm: node -v npm -v Run the following: gatsby build gatsby deploy https://www.gatsbyjs.org/blog/2018-04-10-how-to-handle-comments-in-gatsby-blogs/","title":"Getting Started"},{"location":"js/html/","text":"DOM & HTML DOM and HTML have new standards called web components. <\u2014 added by W3C 4 Categories - HTML Imports - HTML Templates - Shadow DOM - Custom elements Front-End Framework (a.k.a. CSS Framework) - Package of files - Grid - Typography - Components like side panels, buttons, nav bars - Compatible with most browsers (pre-tested) - Examples: - Bootstrap (most popular, distinct look, mobile-first) - Foundation - Stylus - Semantic UI - UI Kit - Skeleton - Yaml - Gumby Bootstrap Grid System https://getbootstrap.com/docs/4.0/layout/grid/ 1 of 3 // xs keeps it on one horizontal line 2 of 3 3 of 3 form-group vs control-group form group is from Bootstrap3. control group is from Bootstrap2. // Form element // Input tag specifies input field // Input elements Title // element HTML Stuff Ordering attributes in HTML tags. - Angular projects in GitHub have good \u201ccorrect\u201d examples. - id first - Used to point to style in stylesheet or to be manipulated by JS. - Used for DOM manipulation. - name - Matters for inputs of forms UI containers/windows that appear above content. - modal/dialog (Click anwhere to dismiss.) - popup (Must click x to close, eventually.) - lightbox/theater (Enlarge and bring on part of screen into focus.) - Popover/tooltip/hover card Modal - Create mode that diables main window. - Main window still visible. - Modal window a \u201cchild\u201d window in front.","title":"Html"},{"location":"js/javascript/","text":"JavaScript ECMA Objects Modules hoisting Paradigm Shift (from Java) Java is compiled while JavaScript code is all text. JavaScript only works in browsers while Java runs in a virtual machine or browser. Java works as an OOP Programming language while JavaScript works as an OOP Scripting Language. JavaScript Objects JavaScript Variables Variables contain a value. var car = \"Fiat\"; JavaScript Objects Objects are variables too, but they can contain multiple values. They are containers for named values called properties. Properties are written as name:value pairs (property name and property value separated by a colon). var person = {firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\"}; var person = { firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\" }; Access Object Properties Two ways: person.firstName; person[\"firstName\"]; Regex https://stackoverflow.com/questions/3518504/regular-expression-for-matching-latitude-longitude-coordinates","title":"JavaScript"},{"location":"js/javascript/#javascript","text":"ECMA Objects Modules hoisting","title":"JavaScript"},{"location":"js/javascript/#paradigm-shift-from-java","text":"Java is compiled while JavaScript code is all text. JavaScript only works in browsers while Java runs in a virtual machine or browser. Java works as an OOP Programming language while JavaScript works as an OOP Scripting Language. JavaScript Objects","title":"Paradigm Shift (from Java)"},{"location":"js/javascript/#javascript-variables","text":"Variables contain a value. var car = \"Fiat\";","title":"JavaScript Variables"},{"location":"js/javascript/#javascript-objects","text":"Objects are variables too, but they can contain multiple values. They are containers for named values called properties. Properties are written as name:value pairs (property name and property value separated by a colon). var person = {firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\"}; var person = { firstName:\"John\", lastName:\"Doe\", age:50, eyeColor:\"blue\" };","title":"JavaScript Objects"},{"location":"js/javascript/#access-object-properties","text":"Two ways: person.firstName; person[\"firstName\"]; Regex https://stackoverflow.com/questions/3518504/regular-expression-for-matching-latitude-longitude-coordinates","title":"Access Object Properties"},{"location":"js/jquery/","text":"jQuery About All JavaScript plugins for Bootstrap require jQuery be included. jQuery must be included before Bootstrap in head. Anchors Scroll to top a href=\"#\" Don't go anywhere a href=\"#!\" Scroll to element named little-div a href=\"#little-div\" Other Android browsers (browser, chrome, etc) won't accept click events on anything but anchor tags. So say you want to use jQuery's .click() method on a <div></div> , it won't work. Either has to be on an anchor or you have to use touch events. The onclick=\"..\" attribute is called an inline event handler. Where id-name corresponds to <div id=\"id-name\"></div> $('#id-name').methodName('otherArgs'); Putting the \"#\" symbol as the href for something means that it points not to a different URL, but rather to another id or name tag on the same page. Functions The .read() function not necessary if your js is last thing that loads before closing </body> tag. $(document).ready(function() { // do something on document ready }); The shorthand for $(document).ready: $(function() { // do something on document ready }); Resources https://www.w3schools.com/jquery/trysel.asp http://elijahmanor.com/differences-between-jquery-bind-vs-live-vs-delegate-vs-on/ https://openclassrooms.com/en/courses/3273226-dive-into-bootstrap/3276742-jquery-plugins","title":"jQuery"},{"location":"js/jquery/#jquery","text":"","title":"jQuery"},{"location":"js/jquery/#about","text":"All JavaScript plugins for Bootstrap require jQuery be included. jQuery must be included before Bootstrap in head.","title":"About"},{"location":"js/jquery/#anchors","text":"","title":"Anchors"},{"location":"js/jquery/#scroll-to-top","text":"a href=\"#\"","title":"Scroll to top"},{"location":"js/jquery/#dont-go-anywhere","text":"a href=\"#!\"","title":"Don't go anywhere"},{"location":"js/jquery/#scroll-to-element-named-little-div","text":"a href=\"#little-div\"","title":"Scroll to element named little-div"},{"location":"js/jquery/#other","text":"Android browsers (browser, chrome, etc) won't accept click events on anything but anchor tags. So say you want to use jQuery's .click() method on a <div></div> , it won't work. Either has to be on an anchor or you have to use touch events. The onclick=\"..\" attribute is called an inline event handler. Where id-name corresponds to <div id=\"id-name\"></div> $('#id-name').methodName('otherArgs'); Putting the \"#\" symbol as the href for something means that it points not to a different URL, but rather to another id or name tag on the same page.","title":"Other"},{"location":"js/jquery/#functions","text":"The .read() function not necessary if your js is last thing that loads before closing </body> tag. $(document).ready(function() { // do something on document ready }); The shorthand for $(document).ready: $(function() { // do something on document ready });","title":"Functions"},{"location":"js/jquery/#resources","text":"https://www.w3schools.com/jquery/trysel.asp http://elijahmanor.com/differences-between-jquery-bind-vs-live-vs-delegate-vs-on/ https://openclassrooms.com/en/courses/3273226-dive-into-bootstrap/3276742-jquery-plugins","title":"Resources"},{"location":"js/js/","text":"JavaScript Cases kebab-case camelCase HTTP-Header-Case snake_case","title":"JavaScript"},{"location":"js/js/#javascript","text":"","title":"JavaScript"},{"location":"js/js/#cases","text":"kebab-case camelCase HTTP-Header-Case snake_case","title":"Cases"},{"location":"js/openlayers/","text":"OpenLayers Get Started 1. Include OpenLayers <script src=\"https://openlayers.org/en/v4.6.5/build/ol.js\" type=\"text/javascript\"></script> 2. Div to contain the map <div id=\"map\" class=\"map\"></div> 3. JavaScript to create a simple map var map = new ol.Map({ target: 'map', // target is the id of the div this will appear in layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ], view: new ol.View({ center: ol.proj.fromLonLat([37.41, 8.82]), zoom: 4 }) }); About Layers Layers are drawn on top of each other in the order in which they are defined. An opaque (raster) layer hides those below it. Controls Attributions Copyright, name of map provider, etc. (e.g. Mapbox requires you provide attribution by displaying their \"wordmark\".) Draw https://openlayers.org/en/latest/examples/draw-features.html Random Return GeoJSON to create Vector Features on map. Fetch Layer from the PostGIS Datastore on GeoServer and display layers on map. Stack OpenLayers GeoServer PostGIS Resources Overlay types OpenLayers 3: How to add controls http://geojson.io/#map=2/20.0/0.0 OpenLayers Cookbook OpenLayers on gis.stackexchange.com OSM: OpenStreetMap OpenLayers.org examples Cesium Resources Cesium docs","title":"Openlayers"},{"location":"js/openlayers/#get-started","text":"","title":"Get Started"},{"location":"js/openlayers/#1-include-openlayers","text":"<script src=\"https://openlayers.org/en/v4.6.5/build/ol.js\" type=\"text/javascript\"></script>","title":"1. Include OpenLayers"},{"location":"js/openlayers/#2-div-to-contain-the-map","text":"<div id=\"map\" class=\"map\"></div>","title":"2. Div to contain the map"},{"location":"js/openlayers/#3-javascript-to-create-a-simple-map","text":"var map = new ol.Map({ target: 'map', // target is the id of the div this will appear in layers: [ new ol.layer.Tile({ source: new ol.source.OSM() }) ], view: new ol.View({ center: ol.proj.fromLonLat([37.41, 8.82]), zoom: 4 }) });","title":"3. JavaScript to create a simple map"},{"location":"js/openlayers/#about","text":"","title":"About"},{"location":"js/openlayers/#layers","text":"Layers are drawn on top of each other in the order in which they are defined. An opaque (raster) layer hides those below it.","title":"Layers"},{"location":"js/openlayers/#controls","text":"","title":"Controls"},{"location":"js/openlayers/#attributions","text":"Copyright, name of map provider, etc. (e.g. Mapbox requires you provide attribution by displaying their \"wordmark\".)","title":"Attributions"},{"location":"js/openlayers/#draw","text":"https://openlayers.org/en/latest/examples/draw-features.html","title":"Draw"},{"location":"js/openlayers/#random","text":"Return GeoJSON to create Vector Features on map. Fetch Layer from the PostGIS Datastore on GeoServer and display layers on map.","title":"Random"},{"location":"js/openlayers/#stack","text":"OpenLayers GeoServer PostGIS","title":"Stack"},{"location":"js/openlayers/#resources","text":"Overlay types OpenLayers 3: How to add controls http://geojson.io/#map=2/20.0/0.0 OpenLayers Cookbook OpenLayers on gis.stackexchange.com OSM: OpenStreetMap OpenLayers.org examples","title":"Resources"},{"location":"js/openlayers/#cesium-resources","text":"Cesium docs","title":"Cesium Resources"},{"location":"js/react/","text":"React Components Types of component: 1. function component 2. class component A component with state, one that updates itself, is a \"class component.\" Resources React Patterns About Redux","title":"React"},{"location":"js/react/#react","text":"","title":"React"},{"location":"js/react/#components","text":"Types of component: 1. function component 2. class component A component with state, one that updates itself, is a \"class component.\"","title":"Components"},{"location":"js/react/#resources","text":"React Patterns About Redux","title":"Resources"},{"location":"js/wkt/","text":"WKT Resources https://gis.stackexchange.com/questions/92888/does-openlayers3-support-wkt-format http://dev.openlayers.org/docs/files/OpenLayers/Format/WKT-js.html http://openlayers.org/en/v3.0.0/apidoc/ol.format.WKT.html http://openlayers.org/en/v3.0.0/examples/wkt.js http://openlayers.org/en/v3.0.0/examples/wkt.html var raster = new ol.layer.Tile({ source: new ol.source.OSM() }); var format = new ol.format.WKT(); var feature = format.readFeature( 'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' + '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' + '-39.1552734375, 10.689697265625 -25.0927734375))'); feature.getGeometry().transform('EPSG:4326', 'EPSG:3857'); var vector = new ol.layer.Vector({ source: new ol.source.Vector({ features: [feature] }) }); var map = new ol.Map({ layers: [raster, vector], target: 'map', view: new ol.View({ center: [2952104.019976033, -3277504.823700756], zoom: 4 }) });","title":"WKT"},{"location":"js/wkt/#wkt","text":"","title":"WKT"},{"location":"js/wkt/#resources","text":"https://gis.stackexchange.com/questions/92888/does-openlayers3-support-wkt-format http://dev.openlayers.org/docs/files/OpenLayers/Format/WKT-js.html http://openlayers.org/en/v3.0.0/apidoc/ol.format.WKT.html http://openlayers.org/en/v3.0.0/examples/wkt.js http://openlayers.org/en/v3.0.0/examples/wkt.html var raster = new ol.layer.Tile({ source: new ol.source.OSM() }); var format = new ol.format.WKT(); var feature = format.readFeature( 'POLYGON((10.689697265625 -25.0927734375, 34.595947265625 ' + '-20.1708984375, 38.814697265625 -35.6396484375, 13.502197265625 ' + '-39.1552734375, 10.689697265625 -25.0927734375))'); feature.getGeometry().transform('EPSG:4326', 'EPSG:3857'); var vector = new ol.layer.Vector({ source: new ol.source.Vector({ features: [feature] }) }); var map = new ol.Map({ layers: [raster, vector], target: 'map', view: new ol.View({ center: [2952104.019976033, -3277504.823700756], zoom: 4 }) });","title":"Resources"},{"location":"latex/","text":"LaTeX https://tex.stackexchange.com/questions/107599/what-is-miktex // This has links to several useful resources. TeX is a computer program for typesetting documents, created by D. E. Knuth. LaTeX, written by L. B. Lamport, is a 'dialect' of TeX. It is suited to long articles and books, since it has facilities for the automatic numbering of chapters, sections, theorems, equations etc., and also has facilities for cross-referencing. MikTeX is a distribution of TeX for Windows, and everything you need to run LaTeX is in MikTeX. TeXworks is the editor that comes with MikTeX. XeLaTeX is essentially a replacement for pdfLaTeX. https://www.maths.tcd.ie/~dwilkins/LaTeXPrimer/ Compiling a latex documents may take several steps when bibtex is used with latex. However, this latex compilation process is the same for most documents. We can make it a template with Makefile so that simply running make will generate the dvi/ps/pdf files for us. Books: - LaTeX Cookbook: Has example thesis, book, presentation, CV ... By default, when make looks for the makefile, it tries the following names, in order: GNUmakefile, makefile and Makefile. LaTeX - https://doclet.github.io - https://pandoc.org - https://plugins.jetbrains.com/plugin/9473-texify-idea Read the Docs OverLeaf pandoc MikTex","title":"LaTeX"},{"location":"latex/#latex","text":"https://tex.stackexchange.com/questions/107599/what-is-miktex // This has links to several useful resources. TeX is a computer program for typesetting documents, created by D. E. Knuth. LaTeX, written by L. B. Lamport, is a 'dialect' of TeX. It is suited to long articles and books, since it has facilities for the automatic numbering of chapters, sections, theorems, equations etc., and also has facilities for cross-referencing. MikTeX is a distribution of TeX for Windows, and everything you need to run LaTeX is in MikTeX. TeXworks is the editor that comes with MikTeX. XeLaTeX is essentially a replacement for pdfLaTeX. https://www.maths.tcd.ie/~dwilkins/LaTeXPrimer/ Compiling a latex documents may take several steps when bibtex is used with latex. However, this latex compilation process is the same for most documents. We can make it a template with Makefile so that simply running make will generate the dvi/ps/pdf files for us. Books: - LaTeX Cookbook: Has example thesis, book, presentation, CV ... By default, when make looks for the makefile, it tries the following names, in order: GNUmakefile, makefile and Makefile. LaTeX - https://doclet.github.io - https://pandoc.org - https://plugins.jetbrains.com/plugin/9473-texify-idea Read the Docs OverLeaf pandoc MikTex","title":"LaTeX"},{"location":"python/","text":"Python Note: 1. Python comes preinstalled on Mac. 1. Pip is automatically installed with 2.7+ and Python 3.4+. Getting Started Install VS Code or PyCharm Install miniconda3 Create a new conda environment Install Jupyter Notebooks Useful Commands Check versions of global Python ```` $ python --version $ python3 --version Upgrade pip pip install --upgrade pip ```","title":"Python"},{"location":"python/#python","text":"Note: 1. Python comes preinstalled on Mac. 1. Pip is automatically installed with 2.7+ and Python 3.4+.","title":"Python"},{"location":"python/#getting-started","text":"Install VS Code or PyCharm Install miniconda3 Create a new conda environment Install Jupyter Notebooks","title":"Getting Started"},{"location":"python/#useful-commands","text":"Check versions of global Python ```` $ python --version $ python3 --version Upgrade pip pip install --upgrade pip ```","title":"Useful Commands"},{"location":"python/conda/","text":"Conda conda update -n base -c defaults conda conda install -c pyviz/label/dev panel=0.10.0a25 Useful commands $ conda info $ conda env list \ufffc Miniconda3 installer installs the library in /opt/ folder no matter what. Create a new conda env conda create --name helios conda env update --file environment.yml conda env update --name helios --file environment.yml https://stackoverflow.com/questions/49474575/how-to-install-my-own-python-module-package-via-conda-and-watch-its-changes conda remove --name <envname> --all Resources Official Docs: https://conda.io/projects/conda/en/latest/ Cheat Sheet: https://conda.io/projects/conda/en/latest/user-guide/cheatsheet.html Guide to Conda Environments: https://towardsdatascience.com/a-guide-to-conda-environments-bc6180fc533","title":"Conda"},{"location":"python/conda/#conda","text":"conda update -n base -c defaults conda conda install -c pyviz/label/dev panel=0.10.0a25","title":"Conda"},{"location":"python/conda/#useful-commands","text":"$ conda info $ conda env list \ufffc Miniconda3 installer installs the library in /opt/ folder no matter what. Create a new conda env conda create --name helios conda env update --file environment.yml conda env update --name helios --file environment.yml https://stackoverflow.com/questions/49474575/how-to-install-my-own-python-module-package-via-conda-and-watch-its-changes conda remove --name <envname> --all","title":"Useful commands"},{"location":"python/conda/#resources","text":"Official Docs: https://conda.io/projects/conda/en/latest/ Cheat Sheet: https://conda.io/projects/conda/en/latest/user-guide/cheatsheet.html Guide to Conda Environments: https://towardsdatascience.com/a-guide-to-conda-environments-bc6180fc533","title":"Resources"},{"location":"python/django/","text":"Django Getting Started Starting the Django server $ python manage.py runserver localhost:8003 http://localhost:8003/","title":"Django"},{"location":"python/django/#django","text":"","title":"Django"},{"location":"python/django/#getting-started","text":"","title":"Getting Started"},{"location":"python/django/#starting-the-django-server","text":"$ python manage.py runserver localhost:8003 http://localhost:8003/","title":"Starting the Django server"},{"location":"python/panel/","text":"Holoviz Panel Examples param.watch() and param.trigger() def watch_checkboxgroup(self, events): selected = self.checkboxgroup_widget.value new_column = [0] * len(self.freestream_numbers.index) print(str(selected)) for x in selected: if x == 'Pitch (deg)': self.freestream_numbers['Pitch (deg)'] = new_column if x == 'Pedal (%)': self.freestream_numbers['Pedal (%)'] = new_column if x == 'Collective (deg)': self.freestream_numbers['Collective (deg)'] = new_column self.param.trigger('reload_freestream_numbers_panel') def user_defined_panel(self): print('Reloading user_defined_panel()') if self.rcas_type_selector == 'User Defined Trim': self.checkboxgroup_widget = pn.widgets.CheckBoxGroup( options=self.rotor_controls_objects, inline=True ) self.checkboxgroup_widget.param.watch(self.watch_checkboxgroup, 'value') return pn.Column(self.checkboxgroup_widget) Resources","title":"Holoviz Panel"},{"location":"python/panel/#holoviz-panel","text":"","title":"Holoviz Panel"},{"location":"python/panel/#examples","text":"","title":"Examples"},{"location":"python/panel/#paramwatch-and-paramtrigger","text":"def watch_checkboxgroup(self, events): selected = self.checkboxgroup_widget.value new_column = [0] * len(self.freestream_numbers.index) print(str(selected)) for x in selected: if x == 'Pitch (deg)': self.freestream_numbers['Pitch (deg)'] = new_column if x == 'Pedal (%)': self.freestream_numbers['Pedal (%)'] = new_column if x == 'Collective (deg)': self.freestream_numbers['Collective (deg)'] = new_column self.param.trigger('reload_freestream_numbers_panel') def user_defined_panel(self): print('Reloading user_defined_panel()') if self.rcas_type_selector == 'User Defined Trim': self.checkboxgroup_widget = pn.widgets.CheckBoxGroup( options=self.rotor_controls_objects, inline=True ) self.checkboxgroup_widget.param.watch(self.watch_checkboxgroup, 'value') return pn.Column(self.checkboxgroup_widget)","title":"param.watch() and param.trigger()"},{"location":"python/panel/#resources","text":"","title":"Resources"},{"location":"python/new-horizons-course/","text":"python-course From Python course taken in March 2020.","title":"python-course"},{"location":"python/new-horizons-course/#python-course","text":"From Python course taken in March 2020.","title":"python-course"},{"location":"python/new-horizons-course/notes/","text":"Python with Data Science Thursday, March 12: Day One numpy.arrange - the square brackets denotes that it\u2019s optional sound March 12, 2020 Course: Python with Data Science (New Horizons) Large datasets need to run on HPC or cluster of computers. MS Azure has a tool for running your py script on a cluster of machines. Data Science Machine Learning is a subset of data science that uses existing data to train ML algorithms to make predictions of take actions on new (never seen before) data. - Existing training data can be labelled or unlabelled. - Labelled is Artificial Intelligence aims to automate complex human activities through a number of specialized computer assisted solutions. - Some of the solutions are based on deep learning through neural networks. Data Scientist: - Uses existing data to train ML algorithms. - Extensive domain knowledge is important!!! Data Analyst uses traditional BI tools to understand and report on existing data. Data Engineer extract, transform, and load. The rest of these notes can be found in a blue notebook. I'll need to move them here at some point.","title":"Python with Data Science"},{"location":"python/new-horizons-course/notes/#python-with-data-science","text":"Thursday, March 12: Day One numpy.arrange - the square brackets denotes that it\u2019s optional sound March 12, 2020 Course: Python with Data Science (New Horizons) Large datasets need to run on HPC or cluster of computers. MS Azure has a tool for running your py script on a cluster of machines. Data Science Machine Learning is a subset of data science that uses existing data to train ML algorithms to make predictions of take actions on new (never seen before) data. - Existing training data can be labelled or unlabelled. - Labelled is Artificial Intelligence aims to automate complex human activities through a number of specialized computer assisted solutions. - Some of the solutions are based on deep learning through neural networks. Data Scientist: - Uses existing data to train ML algorithms. - Extensive domain knowledge is important!!! Data Analyst uses traditional BI tools to understand and report on existing data. Data Engineer extract, transform, and load. The rest of these notes can be found in a blue notebook. I'll need to move them here at some point.","title":"Python with Data Science"},{"location":"rest/api/","text":"APIs API Documentation A detailed discussion of how the API functions and how to utilize it. Describes, with examples, how an API functions, and how to call those functions. API documentation is meant to be read, understood, and used by humans utilizing the API, and is thus written in a format geared towards human users. API Specification Gives a more broad understanding of the functionality and expected results of an API. Details the functional and expected behavior of an API, and the fundamental design philosophy and supported data types. API Definition API definitions define the backbone, organization, and function of an API at a base-machine readable level. Definition, on the other hand, is more focused on the concept of machine consumption \u2014 that is, use by machines and automated systems \u2014 than on human consumption. To learn about APIs or to test your front-end: https://reqres.in/ An API acts as an interface between two different applications so that they can communicate with each other. An API is a method by which the third-party vendors can write programs that interface easily with other programs. In case of Web applications, the API used is web based. An API doesn\u2019t always need to be web based. It doesn\u2019t need a network for its operation. An API consists of a complete set of rules and specifications for a software program to follow in order to facilitate interaction. Typically, \u201cHTTP\u201d is the most commonly used protocol for communication. API may use any means of communication to initiate interaction between applications. An API exactly defines the methods for one software program to interact with the other. When this action involves sending data over a network, Web services come into the picture. An API generally involves calling functions from within a software program. Both API and Web Service are means of communication. Difference between web services and API are: All Web services are APIs but all APIs are not Web services. ... Web service uses only three styles of use: SOAP, REST and XML-RPC for communication whereas API may use any style for communication.","title":"APIs"},{"location":"rest/api/#apis","text":"","title":"APIs"},{"location":"rest/api/#api-documentation","text":"A detailed discussion of how the API functions and how to utilize it. Describes, with examples, how an API functions, and how to call those functions. API documentation is meant to be read, understood, and used by humans utilizing the API, and is thus written in a format geared towards human users.","title":"API Documentation"},{"location":"rest/api/#api-specification","text":"Gives a more broad understanding of the functionality and expected results of an API. Details the functional and expected behavior of an API, and the fundamental design philosophy and supported data types.","title":"API Specification"},{"location":"rest/api/#api-definition","text":"API definitions define the backbone, organization, and function of an API at a base-machine readable level. Definition, on the other hand, is more focused on the concept of machine consumption \u2014 that is, use by machines and automated systems \u2014 than on human consumption. To learn about APIs or to test your front-end: https://reqres.in/ An API acts as an interface between two different applications so that they can communicate with each other. An API is a method by which the third-party vendors can write programs that interface easily with other programs. In case of Web applications, the API used is web based. An API doesn\u2019t always need to be web based. It doesn\u2019t need a network for its operation. An API consists of a complete set of rules and specifications for a software program to follow in order to facilitate interaction. Typically, \u201cHTTP\u201d is the most commonly used protocol for communication. API may use any means of communication to initiate interaction between applications. An API exactly defines the methods for one software program to interact with the other. When this action involves sending data over a network, Web services come into the picture. An API generally involves calling functions from within a software program. Both API and Web Service are means of communication. Difference between web services and API are: All Web services are APIs but all APIs are not Web services. ... Web service uses only three styles of use: SOAP, REST and XML-RPC for communication whereas API may use any style for communication.","title":"API Definition"},{"location":"rest/rest/","text":"REST API RESTful API An application interface (API) that uses HTTP requests to GET, PUT, POST, and DELETE data. a.k.a. \"RESTful web service\" A RESTful API explicitly takes advantage of HTTP methodologies defined by the RFC 2616 protocol. They use GET to retrieve a resource; PUT to change the state of or update a resource, which can be an object, file or block; POST to create that resource; and DELETE to remove it. JAX RS Java API for RESTful services. REST \"representational state transfer\" Resources Great Quora answer Informative link Servlet JDBC connection example // Sylvia Servlet Context tutorial for Java beginners ServletContextListener RESTful API Design\u200a\u2014\u200aStep By Step Guide 'NBB RESTful API Design Guide' example 'REST API Design Guide' example Are REST and HTTP the same thing? Richardson Maturity Level https://www.crummy.com/writing/speaking/2008-QCon/act3.html REST principles REST APIs are not databases What is REST? Understanding REST and SOAP basics https://stackoverflow.com/questions/30580562/what-is-the-difference-between-resource-and-endpoint restful-api-design.readthedocs.io REST Endpoints I would characterize resource as a RESTful subset of endpoint. In REST, the resource typically refers to some object or set of objects that are exposed at an API endpoint. /api/users/johnny An endpoint by itself is just a reference to a uri that accepts web requests that may or may not be RESTful. /services/service.asmx REST \"Representational State Transfer\" Links are always embedded URIs. DELETE, POST, PUT, GET Transfer the state of a \"resource\" over HTTP. RESTful: 1. Identifiability 2. Indenpotence 3. Immutability 4. Verb reuse 5. Addressability Compare with SOAP: * Simple Object Access Protocol * Must use xml REST When interacting with API, manipulating an object. POST http://example.com/widgets // Create new widget Data: name = Foobar GET http://example.com/widgets // View all widgets GET http://example.com/widgets/123 // View single widget DELETE http://example.com/widgets/123 // Delete single widget /widgets/123 // To view, edit, delete particular resource GET /widgets/123/users // List all users assoc. w/ particular resource POST /widgets/123/users // Add a user to particular resource Data: name = Andrew HTTP status codes Success codes User error codes Response formats GET /widgets // Makes req specifying JSON as return format Accept: application/json","title":"REST API"},{"location":"rest/rest/#rest-api","text":"","title":"REST API"},{"location":"rest/rest/#restful-api","text":"An application interface (API) that uses HTTP requests to GET, PUT, POST, and DELETE data. a.k.a. \"RESTful web service\" A RESTful API explicitly takes advantage of HTTP methodologies defined by the RFC 2616 protocol. They use GET to retrieve a resource; PUT to change the state of or update a resource, which can be an object, file or block; POST to create that resource; and DELETE to remove it.","title":"RESTful API"},{"location":"rest/rest/#jax-rs","text":"Java API for RESTful services.","title":"JAX RS"},{"location":"rest/rest/#rest","text":"\"representational state transfer\"","title":"REST"},{"location":"rest/rest/#resources","text":"Great Quora answer Informative link Servlet JDBC connection example // Sylvia Servlet Context tutorial for Java beginners ServletContextListener RESTful API Design\u200a\u2014\u200aStep By Step Guide 'NBB RESTful API Design Guide' example 'REST API Design Guide' example Are REST and HTTP the same thing? Richardson Maturity Level https://www.crummy.com/writing/speaking/2008-QCon/act3.html REST principles REST APIs are not databases What is REST? Understanding REST and SOAP basics https://stackoverflow.com/questions/30580562/what-is-the-difference-between-resource-and-endpoint restful-api-design.readthedocs.io","title":"Resources"},{"location":"rest/rest/#rest-endpoints","text":"I would characterize resource as a RESTful subset of endpoint. In REST, the resource typically refers to some object or set of objects that are exposed at an API endpoint. /api/users/johnny An endpoint by itself is just a reference to a uri that accepts web requests that may or may not be RESTful. /services/service.asmx REST \"Representational State Transfer\" Links are always embedded URIs. DELETE, POST, PUT, GET Transfer the state of a \"resource\" over HTTP. RESTful: 1. Identifiability 2. Indenpotence 3. Immutability 4. Verb reuse 5. Addressability Compare with SOAP: * Simple Object Access Protocol * Must use xml REST When interacting with API, manipulating an object. POST http://example.com/widgets // Create new widget Data: name = Foobar GET http://example.com/widgets // View all widgets GET http://example.com/widgets/123 // View single widget DELETE http://example.com/widgets/123 // Delete single widget /widgets/123 // To view, edit, delete particular resource GET /widgets/123/users // List all users assoc. w/ particular resource POST /widgets/123/users // Add a user to particular resource Data: name = Andrew HTTP status codes Success codes User error codes Response formats GET /widgets // Makes req specifying JSON as return format Accept: application/json","title":"REST Endpoints"},{"location":"sys-prog/","text":"Systems Programming A \u201csystem\u201d is a construct or collection of different elements that together produce results not obtainable by the elements alone. Dividing the system into smaller units allows for a simpler approach relative to the initial allocation of requirements and the subsequent analysis of the system and its functional interfaces. The systems engineering process must begin by discovering the real problems that need to be resolved, and identifying the most probable or highest impact failures that can occur \u2013 systems engineering involves finding solutions to these problems. Source ? Date: November 23, 2019","title":"Systems Programming"},{"location":"sys-prog/#systems-programming","text":"A \u201csystem\u201d is a construct or collection of different elements that together produce results not obtainable by the elements alone. Dividing the system into smaller units allows for a simpler approach relative to the initial allocation of requirements and the subsequent analysis of the system and its functional interfaces. The systems engineering process must begin by discovering the real problems that need to be resolved, and identifying the most probable or highest impact failures that can occur \u2013 systems engineering involves finding solutions to these problems. Source ? Date: November 23, 2019","title":"Systems Programming"},{"location":"sys-prog/linux-commands/","text":"Linux Commands Remove a swap file rm -f .*.swp Secure copy scp username@remotehost.edu:foobar.txt /some/local/dir Open a file with vim $ sudo vim -r pytest.py Remove all swap files $ sudo find . -type f -name \"*.sw[klmnop]\" -delete Get full path of file $ sudo readlink -f filename","title":"Linux Commands"},{"location":"sys-prog/linux-commands/#linux-commands","text":"Remove a swap file rm -f .*.swp Secure copy scp username@remotehost.edu:foobar.txt /some/local/dir Open a file with vim $ sudo vim -r pytest.py Remove all swap files $ sudo find . -type f -name \"*.sw[klmnop]\" -delete Get full path of file $ sudo readlink -f filename","title":"Linux Commands"},{"location":"vim/","text":"My Vim Cheatsheet Getting Started Install Download installer gvim.exe (anywhere) Run and save to C:\\Users\\sclark\\AppData\\Local Make sure to select \"Create.bat\" Add to \"Path\" in environment variables ..\\Local\\Vim\\vim81 Restart machine Configure The vimrc file contains optional runtime configuration settings to initialize Vim when it starts. On Unix based systems, the file is named .vimrc, while on Windows systems it is named _vimrc. source :e $HOME/.vimrc \" on Unix, Mac or OS/2 :e $HOME/_vimrc \" on Windows Lines that begin with \" are comments and are not read by vim. Note the 'system vimrc file' and 'user vimrc file' paths displayed by the :version command. The system vimrc file can be created by an administrator to customize Vim for all users. In addition, each user can have his or her own user vimrc. Run In cmd.exe you can run the following: Start vim vim Start insert mode i Start command mode Esc To save and name :wq testing.md Vim automatically saves files in current working directory. Install a Vim plugin manager Vundle isn't being maintained anymore. Use vim-plug instead. Learn Vim VimGenius Vim-Adventures 5 Places to Learn Vim","title":"My Vim Cheatsheet"},{"location":"vim/#my-vim-cheatsheet","text":"","title":"My Vim Cheatsheet"},{"location":"vim/#getting-started","text":"","title":"Getting Started"},{"location":"vim/#install","text":"Download installer gvim.exe (anywhere) Run and save to C:\\Users\\sclark\\AppData\\Local Make sure to select \"Create.bat\" Add to \"Path\" in environment variables ..\\Local\\Vim\\vim81 Restart machine","title":"Install"},{"location":"vim/#configure","text":"The vimrc file contains optional runtime configuration settings to initialize Vim when it starts. On Unix based systems, the file is named .vimrc, while on Windows systems it is named _vimrc. source :e $HOME/.vimrc \" on Unix, Mac or OS/2 :e $HOME/_vimrc \" on Windows Lines that begin with \" are comments and are not read by vim. Note the 'system vimrc file' and 'user vimrc file' paths displayed by the :version command. The system vimrc file can be created by an administrator to customize Vim for all users. In addition, each user can have his or her own user vimrc.","title":"Configure"},{"location":"vim/#run","text":"In cmd.exe you can run the following: Start vim vim Start insert mode i Start command mode Esc To save and name :wq testing.md Vim automatically saves files in current working directory.","title":"Run"},{"location":"vim/#install-a-vim-plugin-manager","text":"Vundle isn't being maintained anymore. Use vim-plug instead.","title":"Install a Vim plugin manager"},{"location":"vim/#learn-vim","text":"VimGenius Vim-Adventures 5 Places to Learn Vim","title":"Learn Vim"},{"location":"vim/note-taking-with-vim/","text":"Notetaking with Vim My markdown note-taking system using Vim, Vimwiki, and Pandoc Getting Started Install Make xcode-select --install Add a Makefile MD_FILES=about.md 130-final-notes.md general-advice.md requirements.md \\ software-processes.md modeling.md architectural-design.md \\ design-of-components.md software-quality.md \\ configuration-management.md testing.md week-2-discussion.md \\ week-3-discussion.md week-4-discussion.md PDF_FILES=$(MD_FILES:.md=.pdf) BUILD_PDF_FILES=$(PDF_FILES:%=build/%) EXTRA_PDFS=sample-midterm-solutions.pdf 130.pdf: $(BUILD_PDF_FILES) gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default \\ -dNOPAUSE -dQUIET -dBATCH -dDetectDuplicateImages -dCompressFonts=true -r150 -sOutputFile=$@ $^ $(EXTRA_PDFS) build/%.pdf: %.md @mkdir -p $$(dirname $@) pandoc -V geometry:margin=1in -o $@ $? Install Pandoc Pandoc allows you to compile the markdown to pdf or html (for sharing). brew install pandoc Install vim-plug curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim In your home dir, create: .vimrc .vim/ Add the following to .vimrc: set nocompatible filetype plugin on syntax on set shiftwidth=4 set softtabstop=4 set expandtab call plug#begin('~/.vim/plugged') Plug 'vimwiki/vimwiki' Plug 'altercation/vim-colors-solarized' call plug#end() let g:vimwiki_list = [{'path': '~/Documents/vimwiki/', 'syntax': 'markdown', 'ext': '.md'}] Now start Vim and run: :PlugInstall You can add pluginstall to your .vimrc file too, so you don't have to manually call the script. Inside .vim/, you should now have: autoload/ plug.vim plugged/ vim-colors-solarized vimwiki Navigating Start Vim and open index.wiki (or index.md): \\ww Add a link or select # put the cursor on the word <return> Back <delete> To Compile pandoc -t latex -o output-file.pdf input-file.md pandoc input-file.md -t latex -o output-file.pdf pandoc -s -V geometry:margin=1in -o output-file.pdf input-file.md About Once a directory has been designated as the Vimwiki directory, every file therein becomes part of the text-based wiki. Pandoc can turn into a set of HTML pages or pdfs. You can also navigate it from within vim). It also has a diary function which works in a sub-directory of the wiki directory. Resources Markdown Pandoc Notes Pandoc Notetaking Install vim-plug VimWiki VimWiki Gollum Getting Started with Vimwiki https://pandoc.org/MANUAL.html Ultimate guide to writing and publishing in markdown Rippledoc generates HTML from markdown","title":"Notetaking with Vim"},{"location":"vim/note-taking-with-vim/#notetaking-with-vim","text":"My markdown note-taking system using Vim, Vimwiki, and Pandoc","title":"Notetaking with Vim"},{"location":"vim/note-taking-with-vim/#getting-started","text":"","title":"Getting Started"},{"location":"vim/note-taking-with-vim/#install-make","text":"xcode-select --install","title":"Install Make"},{"location":"vim/note-taking-with-vim/#add-a-makefile","text":"MD_FILES=about.md 130-final-notes.md general-advice.md requirements.md \\ software-processes.md modeling.md architectural-design.md \\ design-of-components.md software-quality.md \\ configuration-management.md testing.md week-2-discussion.md \\ week-3-discussion.md week-4-discussion.md PDF_FILES=$(MD_FILES:.md=.pdf) BUILD_PDF_FILES=$(PDF_FILES:%=build/%) EXTRA_PDFS=sample-midterm-solutions.pdf 130.pdf: $(BUILD_PDF_FILES) gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default \\ -dNOPAUSE -dQUIET -dBATCH -dDetectDuplicateImages -dCompressFonts=true -r150 -sOutputFile=$@ $^ $(EXTRA_PDFS) build/%.pdf: %.md @mkdir -p $$(dirname $@) pandoc -V geometry:margin=1in -o $@ $?","title":"Add a Makefile"},{"location":"vim/note-taking-with-vim/#install-pandoc","text":"Pandoc allows you to compile the markdown to pdf or html (for sharing). brew install pandoc","title":"Install Pandoc"},{"location":"vim/note-taking-with-vim/#install-vim-plug","text":"curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim","title":"Install vim-plug"},{"location":"vim/note-taking-with-vim/#in-your-home-dir-create","text":".vimrc .vim/","title":"In your home dir, create:"},{"location":"vim/note-taking-with-vim/#add-the-following-to-vimrc","text":"set nocompatible filetype plugin on syntax on set shiftwidth=4 set softtabstop=4 set expandtab call plug#begin('~/.vim/plugged') Plug 'vimwiki/vimwiki' Plug 'altercation/vim-colors-solarized' call plug#end() let g:vimwiki_list = [{'path': '~/Documents/vimwiki/', 'syntax': 'markdown', 'ext': '.md'}]","title":"Add the following to .vimrc:"},{"location":"vim/note-taking-with-vim/#now-start-vim-and-run","text":":PlugInstall You can add pluginstall to your .vimrc file too, so you don't have to manually call the script. Inside .vim/, you should now have: autoload/ plug.vim plugged/ vim-colors-solarized vimwiki","title":"Now start Vim and run:"},{"location":"vim/note-taking-with-vim/#navigating","text":"","title":"Navigating"},{"location":"vim/note-taking-with-vim/#start-vim-and-open-indexwiki-or-indexmd","text":"\\ww","title":"Start Vim and open index.wiki (or index.md):"},{"location":"vim/note-taking-with-vim/#add-a-link-or-select","text":"# put the cursor on the word <return>","title":"Add a link or select"},{"location":"vim/note-taking-with-vim/#back","text":"<delete>","title":"Back"},{"location":"vim/note-taking-with-vim/#to-compile","text":"pandoc -t latex -o output-file.pdf input-file.md pandoc input-file.md -t latex -o output-file.pdf pandoc -s -V geometry:margin=1in -o output-file.pdf input-file.md","title":"To Compile"},{"location":"vim/note-taking-with-vim/#about","text":"Once a directory has been designated as the Vimwiki directory, every file therein becomes part of the text-based wiki. Pandoc can turn into a set of HTML pages or pdfs. You can also navigate it from within vim). It also has a diary function which works in a sub-directory of the wiki directory.","title":"About"},{"location":"vim/note-taking-with-vim/#resources","text":"Markdown Pandoc Notes Pandoc Notetaking Install vim-plug VimWiki VimWiki Gollum Getting Started with Vimwiki https://pandoc.org/MANUAL.html Ultimate guide to writing and publishing in markdown Rippledoc generates HTML from markdown","title":"Resources"},{"location":"vim/vim-crib-sheet/","text":"Vim Crib Sheet Getting Started Download installer gvim.exe (anywhere) Run and save to C:\\Users\\sclark\\AppData\\Local Make sure to select \"Create.bat\" Add to \"Path\" in environment variables ..\\Local\\Vim\\vim81 Restart machine In cmd.exe you can run: vim // starts vim type anywhere or i // insert mode Esc // cmd mode :wq testing.md // to save and name Vim automatically saves files in current working directory. vim-plug Vimwiki Start vim: vim Open current index.md <space>ww Resources vim-plug smoothterminal.com/articles/vimwiki","title":"Vim Crib Sheet"},{"location":"vim/vim-crib-sheet/#vim-crib-sheet","text":"","title":"Vim Crib Sheet"},{"location":"vim/vim-crib-sheet/#getting-started","text":"Download installer gvim.exe (anywhere) Run and save to C:\\Users\\sclark\\AppData\\Local Make sure to select \"Create.bat\" Add to \"Path\" in environment variables ..\\Local\\Vim\\vim81 Restart machine In cmd.exe you can run: vim // starts vim type anywhere or i // insert mode Esc // cmd mode :wq testing.md // to save and name Vim automatically saves files in current working directory. vim-plug","title":"Getting Started"},{"location":"vim/vim-crib-sheet/#vimwiki","text":"Start vim: vim Open current index.md <space>ww","title":"Vimwiki"},{"location":"vim/vim-crib-sheet/#resources","text":"vim-plug","title":"Resources"},{"location":"vim/vim-crib-sheet/#smoothterminalcomarticlesvimwiki","text":"","title":"smoothterminal.com/articles/vimwiki"},{"location":"vim/vimwiki-starter/","text":"Work Admin Projects Checklists Dev React OpenLayers Tools Git Vim DI2E https://jamesbvaughan.com/markdown-pandoc-notes/ https://vim.fandom.com/wiki/Vim_Tips_Wiki https://github.com/junegunn/vim-plug http://vimwiki.github.io/","title":"My Knowledge Base"},{"location":"vim/vimwiki-starter/#work","text":"Admin Projects Checklists","title":"Work"},{"location":"vim/vimwiki-starter/#dev","text":"React OpenLayers","title":"Dev"},{"location":"vim/vimwiki-starter/#tools","text":"Git Vim DI2E https://jamesbvaughan.com/markdown-pandoc-notes/ https://vim.fandom.com/wiki/Vim_Tips_Wiki https://github.com/junegunn/vim-plug http://vimwiki.github.io/","title":"Tools"}]}